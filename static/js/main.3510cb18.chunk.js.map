{"version":3,"sources":["components/NeuralNetworkFunctionApproximator.js","components/VAEVisualizer.js","components/GradientDescentAtSaddlePoint.js","components/EpochAndBatchVisualization.js","components/EncoderDecoderVisualizer.js","components/HessianAndEigenvalue.js","components/LearningRate.js","App.js","reportWebVitals.js","index.js"],"names":["NeuralNetworkVisualization","layers","weights","setWeights","useState","biases","setBiases","learningRate","setLearningRate","epoch","setEpoch","isTraining","setIsTraining","approximationData","setApproximationData","targetData","setTargetData","loss","setLoss","canvasRef","useRef","animationRef","networkRef","useEffect","initializeNetwork","newWeights","newBiases","i","length","layerWeights","layerBiases","j","neuronWeights","k","stddev","Math","sqrt","push","random","current","generateFunctionData","currentWeights","currentBiases","extendedDomain","PI","newTargetData","x","y","sin","yApprox","boundaryExtraSamples","ratio","newApproximationData","map","point","forward","input","activation","layer","bias","newActivation","sum","sigmoid","exp","backward","target","activations","preActivations","preActivation","outputError","o","deltas","currentDelta","newDelta","error","derivative","unshift","JSON","parse","stringify","change","reduce","err","stopTraining","cancelAnimationFrame","_approximationData$sa","canvas","ctx","getContext","clearRect","width","height","layerSpacing","minSpacingNeeded","neurons","neuronRadius","neuronSpacings","idealSpacing","max","layerHeights","sampleIndex","currentSample","currentOutput","layerNeurons","layerHeight","startY","prevLayerNeurons","prevLayerHeight","prevStartY","prevSpacing","currentSpacing","prevX","prevY","w","absW","abs","weightColor","min","weightWidth","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","midX","midY","fillStyle","textWidth","measureText","toFixed","fillRect","font","fillText","arc","fill","textAlign","textBaseline","inputText","outputText","targetText","outputWidth","targetWidth","maxWidth","React","createElement","className","type","step","value","onChange","e","parseFloat","disabled","onClick","startTraining","frameCount","train","trainEpoch","totalLoss","shuffledData","sort","slice","forEach","prev","requestAnimationFrame","resetNetwork","ref","ResponsiveContainer","LineChart","margin","top","right","left","bottom","data","CartesianGrid","strokeDasharray","XAxis","dataKey","label","position","offset","domain","tickFormatter","YAxis","angle","Tooltip","formatter","name","Legend","Line","dot","strokeWidth","isAnimationActive","StableVAEVisualization","dimension1","setDimension1","dimension2","setDimension2","dimension3","setDimension3","diffusionMode","setDiffusionMode","generateFlower","dim1","dim2","dim3","flowerColor","floor","bloomFactor","shapeFactor","transform","d","cx","cy","r","Array","_","petalLength","controlPoint","key","cos","opacity","generateSmallFlower","viewBox","style","padding","fontFamily","marginBottom","backgroundColor","borderRadius","boxShadow","display","gridTemplateColumns","gap","border","fontSize","background","flexDirection","alignItems","marginTop","justifyContent","marginRight","color","cursor","generateLatentSpace","x1","y1","x2","y2","textAnchor","noiseX","noiseY","fontWeight","paddingLeft","OptimizerComparison","renderVisualization","d3","selectAll","remove","innerWidth","innerHeight","svg","append","attr","xScale","range","yScale","sgdData","adamData","adamWData","sgdLoss","adamLoss","adamWLoss","call","ticks","text","line","curve","datum","legend","saddle","saddleSize","saddleScale","points","z","colorScale","enter","id","TrainingDataVisualization","batchSize","setBatchSize","currentEpoch","setCurrentEpoch","currentBatch","setCurrentBatch","totalBatches","setTotalBatches","dataColors","setDataColors","shuffleEnabled","setShuffleEnabled","shuffledIndices","setShuffledIndices","colors","hue","batches","ceil","shuffled","from","seed","t","m","seededRandom","currentBatchIndices","getCurrentBatchIndices","ordering","startIdx","endIdx","handleBatchSizeChange","newSize","parseInt","handleBatchChange","newBatch","newEpoch","checked","handlePrevBatch","handleNextBatch","idx","isActive","includes","jsx","NeuralNetworkVisualizer","styles","container","heading","compareContainer","section","sectionTitle","subtitle","description","keyPoints","keyPointsTitle","keyComponentsTitle","detailsContainer","componentTitle","termList","term","definition","marginLeft","architectureContainer","architectureSimpleContainer","flowContainer","verticalColumn","box","inputBox","encoderBox","latentBox","decoderBox","outputBox","meanBox","varBox","samplingBox","contractingBox","deeperBox","bottleneckBox","expandingBox","furtherBox","arrow","downArrow","skipConnectionsLabel","HessianEigenvalueVisualizer","parameters","setParameters","a","b","c","selectedPoint","setSelectedPoint","hessian","setHessian","eigenvalues","setEigenvalues","criticalPoints","setCriticalPoints","cameraDistance","setCameraDistance","cameraRotation","setCameraRotation","cameraHeight","setCameraHeight","containerRef","sceneRef","rendererRef","cameraRef","animationFrameRef","functionHessian","determinePointType","h","calculateHessian","eigs","calculateEigenvalues","every","val","scope","row","element","math","matrix","trace","determinant","discriminant","createTextLabel","document","context","toString","padStart","texture","THREE","needsUpdate","spriteMaterial","sprite","set","scale","createFunctionSurface","existingSurface","getObjectByName","objects","children","obj","userData","isCriticalPoint","geometry","positions","indices","minZ","Infinity","maxZ","size","g","setAttribute","setIndex","computeVertexNormals","material","vertexColors","side","shininess","mesh","findCriticalPoints","critPoint","sphereGeometry","sphereMaterial","sphere","add","eigenvectors","calculateEigenvectors","lambda","eigenvector","eigenvalue","normalizedVector","arrowColor","arrowHelper","arrowLabel","scene","clientWidth","clientHeight","camera","updateCamera","lookAt","renderer","antialias","setSize","firstChild","removeChild","appendChild","domElement","ambientLight","directionalLight","axesHelper","addAxisLabel","animate","render","handleResize","aspect","updateProjectionMatrix","window","addEventListener","removeEventListener","dispose","replace","handleZoomIn","handleZoomOut","handleRotateLeft","handleRotateRight","handleMoveUp","handleMoveDown","minHeight","SCHEDULE_COLORS","constant","onecycle","cosine","SimpleTooltip","_ref","active","payload","entry","toExponential","LRScheduleVisualizer","totalEpochs","setTotalEpochs","maxLR","setMaxLR","initialLR","setInitialLR","warmupPct","setWarmupPct","activeSchedules","setActiveSchedules","totalSteps","datasetSize","lrData","setLrData","lossData","setLossData","chartWidth","setChartWidth","chartHeight","setChartHeight","_document$getElementB","containerWidth","getElementById","newLRData","warmupSteps","step_decay","decay1","decay2","decaySteps","totalDecaySteps","cosineValue","newLossData","lrPoint","curr","schedule","constant_loss","step_loss","onecycle_loss","cosine_loss","lr","undefined","initialProgress","oscillationPhase","oscillation","finalImprovement","optimalLoss","progress","plateauNoise","noise","exploreProgress","postWarmupProgress","cosineEffect","Object","keys","console","log","flexWrap","entries","_ref2","filter","s","toggleSchedule","borderColor","charAt","toUpperCase","content","verticalAlign","ReferenceLine","Fragment","connectNulls","App","activeComponent","setActiveComponent","componentMap","neural","vae","VAEVisualizer","gd","GradientDescent","eb","EpochAndBatch","ed","EncoderDecoder","HessianEigenvalue","learningrate","LearningRate","borderBottom","button","transition","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","StrictMode"],"mappings":"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","file":"static/js/main.3510cb18.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n// Neural Network Visualization Component\nconst NeuralNetworkVisualization = () => {\n  // Fixed network structure: 1 input, four hidden layers with architecture adjustments, 1 output\n  const layers = [1, 12, 10, 8, 6, 1];\n  \n  // State variables\n  const [weights, setWeights] = useState([]); // Network weights\n  const [biases, setBiases] = useState([]); // Network biases\n  const [learningRate, setLearningRate] = useState(0.05); // Learning rate\n  const [epoch, setEpoch] = useState(0); // Current training epoch\n  const [isTraining, setIsTraining] = useState(false); // Training status\n  const [approximationData, setApproximationData] = useState([]); // Approximation function data\n  const [targetData, setTargetData] = useState([]); // Target function data\n  const [loss, setLoss] = useState(1.0); // Current loss\n\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const networkRef = useRef({ weights: [], biases: [] });\n\n  // Initialize network\n  useEffect(() => {\n    initializeNetwork();\n  }, []);\n\n  // Initialize network weights and biases\n  const initializeNetwork = () => {\n    const newWeights = [];\n    const newBiases = [];\n    \n    for (let i = 0; i < layers.length - 1; i++) {\n      const layerWeights = [];\n      const layerBiases = [];\n      \n      for (let j = 0; j < layers[i + 1]; j++) {\n        const neuronWeights = [];\n        for (let k = 0; k < layers[i]; k++) {\n          // Initialize weights (using Xavier initialization)\n          const stddev = Math.sqrt(1.0 / (layers[i] + layers[i + 1]));\n          neuronWeights.push((Math.random() * 2 - 1) * stddev);\n        }\n        layerWeights.push(neuronWeights);\n        layerBiases.push((Math.random() * 2 - 1) * 0.05);\n      }\n      \n      newWeights.push(layerWeights);\n      newBiases.push(layerBiases);\n    }\n    \n    // Update component state\n    setWeights(newWeights);\n    setBiases(newBiases);\n    setEpoch(0);\n    setLoss(1.0);\n    \n    // Also update reference to ensure always using latest weights\n    networkRef.current = {\n      weights: newWeights,\n      biases: newBiases\n    };\n    \n    // Generate initial data\n    generateFunctionData(newWeights, newBiases);\n  };\n\n  // Generate target function data (more complex function with extended domain and higher boundary sampling)\n  const generateFunctionData = (currentWeights, currentBiases) => {\n    // Create two sets of samples:\n    // 1. Regular samples across the domain\n    // 2. Extra samples concentrated at boundaries\n    \n    const regularSamples = 40;\n    const boundaryExtraSamples = 20; // Extra samples focused on boundaries\n    const extendedDomain = 0.1 * Math.PI; // Extend domain by 10% of π\n    \n    const newTargetData = [];\n    \n    // Regular samples across the domain\n    for (let i = 0; i < regularSamples; i++) {\n      const x = -Math.PI - extendedDomain + ((2 * Math.PI + 2 * extendedDomain) * i) / (regularSamples - 1);\n      \n      // Complex target function: sin(x) + 0.5*sin(3x) * x^2/5\n      const y = Math.sin(x) + 0.5 * Math.sin(3 * x) * (x * x / 5);\n      \n      newTargetData.push({ x, y, yApprox: 0 });\n    }\n    \n    // Extra samples near left boundary\n    for (let i = 0; i < boundaryExtraSamples / 2; i++) {\n      const ratio = i / (boundaryExtraSamples / 2);\n      const x = -Math.PI - extendedDomain + ratio * Math.PI * 0.4; // Focus on first 40% of left side\n      \n      const y = Math.sin(x) + 0.5 * Math.sin(3 * x) * (x * x / 5);\n      newTargetData.push({ x, y, yApprox: 0 });\n    }\n    \n    // Extra samples near right boundary\n    for (let i = 0; i < boundaryExtraSamples / 2; i++) {\n      const ratio = i / (boundaryExtraSamples / 2);\n      const x = Math.PI * 0.6 + ratio * (Math.PI * 0.4 + extendedDomain); // Focus on last 40% of right side\n      \n      const y = Math.sin(x) + 0.5 * Math.sin(3 * x) * (x * x / 5);\n      newTargetData.push({ x, y, yApprox: 0 });\n    }\n    \n    setTargetData(newTargetData);\n    \n    // Calculate initial approximation function\n    if (currentWeights && currentWeights.length > 0) {\n      const newApproximationData = newTargetData.map(point => {\n        const yApprox = forward([point.x], currentWeights, currentBiases)[0];\n        return { x: point.x, y: point.y, yApprox };\n      });\n      \n      setApproximationData(newApproximationData);\n    }\n  };\n\n  // Forward propagation with SiLU (Swish) activation\n  const forward = (input, currentWeights, currentBiases) => {\n    let activation = [...input];\n    const weights = currentWeights || networkRef.current.weights;\n    const biases = currentBiases || networkRef.current.biases;\n    \n    for (let i = 0; i < weights.length; i++) {\n      const layer = weights[i];\n      const bias = biases[i];\n      const newActivation = [];\n      \n      for (let j = 0; j < layer.length; j++) {\n        const neuronWeights = layer[j];\n        let sum = bias[j];\n        \n        for (let k = 0; k < neuronWeights.length; k++) {\n          sum += neuronWeights[k] * activation[k];\n        }\n        \n        // Use SiLU/Swish activation function (x * sigmoid(x)) for hidden layers\n        if (i < weights.length - 1) {\n          // SiLU/Swish: x * sigmoid(x)\n          const sigmoid = 1 / (1 + Math.exp(-sum));\n          newActivation.push(sum * sigmoid);\n        } else {\n          newActivation.push(sum); // No activation function for output layer\n        }\n      }\n      \n      activation = [...newActivation];\n    }\n    \n    return activation;\n  };\n\n  // Backward propagation with SiLU derivative\n  const backward = (input, target) => {\n    const weights = networkRef.current.weights;\n    const biases = networkRef.current.biases;\n    \n    // Forward pass and save activations and pre-activations for each layer\n    const activations = [input]; // Outputs after activation\n    const preActivations = []; // Inputs before activation\n    let activation = [...input];\n    \n    for (let i = 0; i < weights.length; i++) {\n      const layer = weights[i];\n      const bias = biases[i];\n      const newActivation = [];\n      const preActivation = [];\n      \n      for (let j = 0; j < layer.length; j++) {\n        const neuronWeights = layer[j];\n        let sum = bias[j];\n        \n        for (let k = 0; k < neuronWeights.length; k++) {\n          sum += neuronWeights[k] * activation[k];\n        }\n        \n        preActivation.push(sum);\n        \n        // Use SiLU activation for hidden layers\n        if (i < weights.length - 1) {\n          const sigmoid = 1 / (1 + Math.exp(-sum));\n          newActivation.push(sum * sigmoid);\n        } else {\n          newActivation.push(sum);\n        }\n      }\n      \n      preActivations.push(preActivation);\n      activation = [...newActivation];\n      activations.push(newActivation);\n    }\n    \n    // Calculate output layer error\n    const output = activations[activations.length - 1];\n    const outputError = output.map((o, i) => o - target[i]);\n    \n    // Backpropagate error\n    const deltas = [outputError];\n    \n    for (let i = weights.length - 1; i > 0; i--) {\n      const currentDelta = deltas[0];\n      const newDelta = [];\n      \n      for (let j = 0; j < layers[i]; j++) {\n        let error = 0;\n        \n        for (let k = 0; k < currentDelta.length; k++) {\n          error += currentDelta[k] * weights[i][k][j];\n        }\n        \n        // SiLU/Swish derivative: sigmoid(x) + x*sigmoid(x)*(1-sigmoid(x))\n        const x = preActivations[i-1][j];\n        const sigmoid = 1 / (1 + Math.exp(-x));\n        const derivative = sigmoid + x * sigmoid * (1 - sigmoid);\n        \n        newDelta.push(error * derivative);\n      }\n      \n      deltas.unshift(newDelta);\n    }\n    \n    // Create deep copies of weights and biases\n    const newWeights = JSON.parse(JSON.stringify(weights));\n    const newBiases = JSON.parse(JSON.stringify(biases));\n    \n    // Update weights and biases\n    for (let i = 0; i < weights.length; i++) {\n      for (let j = 0; j < weights[i].length; j++) {\n        for (let k = 0; k < weights[i][j].length; k++) {\n          const change = learningRate * deltas[i][j] * activations[i][k];\n          newWeights[i][j][k] -= change;\n        }\n        \n        newBiases[i][j] -= learningRate * deltas[i][j];\n      }\n    }\n    \n    // Update reference and state\n    networkRef.current = {\n      weights: newWeights,\n      biases: newBiases\n    };\n    \n    setWeights([...newWeights]);\n    setBiases([...newBiases]);\n    \n    // Calculate mean squared error\n    return outputError.reduce((sum, err) => sum + err * err, 0) / outputError.length;\n  };\n\n  // Train one epoch\n  const trainEpoch = () => {\n    let totalLoss = 0;\n    \n    // Randomly shuffle training data\n    const shuffledData = [...targetData].sort(() => Math.random() - 0.5);\n    \n    // Mini-batch gradient descent\n    const batchSize = 10;\n    for (let i = 0; i < shuffledData.length; i += batchSize) {\n      const batch = shuffledData.slice(i, Math.min(i + batchSize, shuffledData.length));\n      \n      batch.forEach(point => {\n        const error = backward([point.x], [point.y]);\n        totalLoss += error;\n      });\n    }\n    \n    totalLoss /= shuffledData.length;\n    \n    // Update approximation function data\n    const newApproximationData = targetData.map(point => {\n      const yApprox = forward([point.x], networkRef.current.weights, networkRef.current.biases)[0];\n      return { x: point.x, y: point.y, yApprox };\n    });\n    \n    // Update UI state\n    setApproximationData([...newApproximationData]);\n    setLoss(totalLoss);\n    setEpoch(prev => prev + 1);\n    \n    // For more complex functions, allow more training epochs before stopping\n    return (totalLoss < 0.0001 && epoch >= 300) || epoch >= 2000;\n  };\n\n  // Start training\n  const startTraining = () => {\n    if (isTraining) return;\n    \n    setIsTraining(true);\n    let frameCount = 0;\n    \n    const train = () => {\n      frameCount++;\n      \n      // Execute training every few frames to avoid UI blocking\n      if (frameCount % 3 === 0) {\n        const converged = trainEpoch();\n        \n        if (converged || epoch >= 1000) {\n          setIsTraining(false);\n          return;\n        }\n      }\n      \n      animationRef.current = requestAnimationFrame(train);\n    };\n    \n    animationRef.current = requestAnimationFrame(train);\n  };\n\n  // Stop training\n  const stopTraining = () => {\n    if (animationRef.current) {\n      cancelAnimationFrame(animationRef.current);\n    }\n    setIsTraining(false);\n  };\n\n  // Reset network\n  const resetNetwork = () => {\n    stopTraining();\n    initializeNetwork();\n  };\n\n  // Draw neural network\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    \n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    // Adjust canvas size for better visibility\n    canvas.width = 700; // Increase canvas width\n    canvas.height = 500; // Increase canvas height\n    \n    const margin = 70; // Increased margin\n    const width = canvas.width - 2 * margin;\n    const height = canvas.height - 2 * margin;\n    \n    const layerSpacing = width / (layers.length - 1);\n    const neuronRadius = 12; // Reduced neuron radius\n    \n    // Calculate minimum spacing needed for each layer\n    const minSpacingNeeded = layers.map(neurons => {\n      // At least 2.5 * neuron diameter between centers to avoid overlap\n      return neuronRadius * 5;\n    });\n    \n    // Calculate actual spacing based on available height and neurons\n    const neuronSpacings = layers.map((neurons, i) => {\n      const idealSpacing = height / (neurons);\n      // Use at least minimum spacing or ideal spacing, whichever is larger\n      return Math.max(minSpacingNeeded[i], idealSpacing);\n    });\n    \n    // Calculate layer heights\n    const layerHeights = layers.map((neurons, i) => (neurons - 1) * neuronSpacings[i]);\n    \n    // Select current data sample for display\n    const sampleIndex = epoch % targetData.length;\n    const currentSample = targetData[sampleIndex] || { x: 0, y: 0 };\n    \n    // Calculate network output for current sample\n    const currentOutput = approximationData[sampleIndex]?.yApprox || 0;\n    \n    // Draw neurons and connections\n    for (let i = 0; i < layers.length; i++) {\n      const layerNeurons = layers[i];\n      const layerHeight = layerHeights[i];\n      const startY = margin + (height - layerHeight) / 2;\n      \n      // Draw connections first (so neurons are drawn on top)\n      if (i > 0) {\n        const prevLayerNeurons = layers[i - 1];\n        const prevLayerHeight = layerHeights[i - 1];\n        const prevStartY = margin + (height - prevLayerHeight) / 2;\n        const prevSpacing = neuronSpacings[i-1];\n        const currentSpacing = neuronSpacings[i];\n        \n        for (let j = 0; j < layerNeurons; j++) {\n          const x = margin + i * layerSpacing;\n          const y = startY + j * currentSpacing;\n          \n          for (let k = 0; k < prevLayerNeurons; k++) {\n            const prevX = margin + (i - 1) * layerSpacing;\n            const prevY = prevStartY + k * prevSpacing;\n            \n            // Set connection color and width based on weight\n            if (networkRef.current.weights.length > 0 && i - 1 < networkRef.current.weights.length) {\n              const w = networkRef.current.weights[i - 1][j] ? networkRef.current.weights[i - 1][j][k] || 0 : 0;\n              const absW = Math.abs(w);\n              \n              // Only draw connections with significant weights\n              if (absW > 0.05) {\n                // Weight color: green for positive, red for negative\n                const weightColor = w > 0 ? `rgba(0, 128, 0, ${Math.min(absW, 1)})` : `rgba(255, 0, 0, ${Math.min(absW, 1)})`;\n                \n                // Weight width: thicker for larger absolute values\n                const weightWidth = 0.5 + 2 * Math.min(absW, 1);\n                \n                ctx.beginPath();\n                ctx.moveTo(prevX + neuronRadius, prevY);\n                ctx.lineTo(x - neuronRadius, y);\n                ctx.strokeStyle = weightColor;\n                ctx.lineWidth = weightWidth;\n                ctx.stroke();\n                \n                // Only show weight values for significant weights\n                if (absW > 0.3) {\n                  // Show weight value\n                  const midX = (prevX + neuronRadius + x - neuronRadius) / 2;\n                  const midY = (prevY + y) / 2;\n                  \n                  // White background for text clarity\n                  ctx.fillStyle = 'rgba(255, 255, 255, 0.7)';\n                  const textWidth = ctx.measureText(w.toFixed(2)).width;\n                  ctx.fillRect(midX - textWidth/2 - 2, midY - 7, textWidth + 4, 14);\n                  \n                  ctx.fillStyle = '#000000';\n                  ctx.font = '9px Arial';\n                  ctx.fillText(w.toFixed(2), midX, midY);\n                }\n              }\n            }\n          }\n        }\n      }\n      \n      // Now draw neurons on top of connections\n      for (let j = 0; j < layerNeurons; j++) {\n        const x = margin + i * layerSpacing;\n        const y = startY + j * neuronSpacings[i];\n        \n        // Draw neuron\n        ctx.beginPath();\n        ctx.arc(x, y, neuronRadius, 0, 2 * Math.PI);\n        ctx.fillStyle = i === 0 ? '#88CCEE' : i === layers.length - 1 ? '#DDCC77' : '#44AA99';\n        ctx.fill();\n        ctx.strokeStyle = '#000000';\n        ctx.lineWidth = 1;\n        ctx.stroke();\n        \n        // Show neuron number\n        ctx.fillStyle = '#000000';\n        ctx.font = '9px Arial';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText(`${i+1}-${j+1}`, x, y);\n        \n        // Show input/output values - fixed position and display\n        if (i === 0) { // Input layer\n          ctx.fillStyle = '#000000';\n          ctx.font = 'bold 10px Arial';\n          ctx.textAlign = 'right';\n          \n          // Add background for better text clarity\n          const inputText = `Input x: ${currentSample.x.toFixed(2)}`;\n          const textWidth = ctx.measureText(inputText).width;\n          ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n          ctx.fillRect(x - neuronRadius - 8 - textWidth, y - 7, textWidth + 4, 14);\n          \n          ctx.fillStyle = '#000000';\n          ctx.fillText(inputText, x - neuronRadius - 8, y);\n        } else if (i === layers.length - 1) { // Output layer\n          // Add background box for output\n          const outputText = `Output: ${currentOutput.toFixed(2)}`;\n          const targetText = `Target: ${currentSample.y.toFixed(2)}`;\n          \n          const outputWidth = ctx.measureText(outputText).width;\n          const targetWidth = ctx.measureText(targetText).width;\n          const maxWidth = Math.max(outputWidth, targetWidth);\n          \n          ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n          ctx.fillRect(x + neuronRadius + 8, y - 15, maxWidth + 8, 30);\n          \n          ctx.fillStyle = '#0000AA';\n          ctx.font = 'bold 10px Arial';\n          ctx.textAlign = 'left';\n          ctx.fillText(outputText, x + neuronRadius + 12, y - 5);\n          \n          ctx.fillStyle = '#AA0000';\n          ctx.fillText(targetText, x + neuronRadius + 12, y + 10);\n        }\n      }\n    }\n  }, [weights, epoch, targetData, approximationData]);\n\n  // Cleanup on component unmount\n  useEffect(() => {\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []);\n\n  // Render component\n  return (\n    <div className=\"w-full p-4 bg-white\">\n      <h2 className=\"text-xl font-bold mb-4 text-center\">Neural Network Learning Visualization (Complex Function)</h2>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n        <div className=\"bg-gray-50 p-4 rounded\">\n          <h3 className=\"text-lg font-semibold mb-2\">Control Panel</h3>\n          \n          <div className=\"mb-4\">\n            <p className=\"text-sm mb-2\">Network Structure: 1-12-10-8-6-1 (fixed, pyramid architecture)</p>\n            <label className=\"block text-sm font-medium mb-1\">Learning Rate: {learningRate.toFixed(3)}</label>\n            <input\n              type=\"range\"\n              min=\"0.001\"\n              max=\"0.2\"\n              step=\"0.001\"\n              value={learningRate}\n              onChange={e => setLearningRate(parseFloat(e.target.value))}\n              className=\"w-full\"\n              disabled={isTraining}\n            />\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            <button\n              onClick={isTraining ? stopTraining : startTraining}\n              className={`px-4 py-2 rounded ${isTraining ? 'bg-red-500 hover:bg-red-600' : 'bg-green-500 hover:bg-green-600'} text-white font-medium`}\n            >\n              {isTraining ? 'Stop Training' : 'Start Training'}\n            </button>\n            \n            <button\n              onClick={resetNetwork}\n              className=\"px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white font-medium rounded\"\n              disabled={isTraining}\n            >\n              Reset Network\n            </button>\n          </div>\n          \n          <div className=\"mt-4\">\n            <p className=\"text-sm\">Current Epoch: <span className=\"font-semibold\">{epoch}</span></p>\n            <p className=\"text-sm\">Current Loss: <span className=\"font-semibold\">{loss.toFixed(6)}</span></p>\n          </div>\n        </div>\n        \n        <div className=\"bg-gray-50 p-4 rounded\">\n          <h3 className=\"text-lg font-semibold mb-2\">Network Structure Visualization</h3>\n          <div className=\"border rounded bg-white\">\n            <canvas ref={canvasRef} width=\"500\" height=\"300\" className=\"w-full h-64\" />\n          </div>\n          <p className=\"text-xs mt-1 text-gray-500\">Colors represent weights: green for positive, red for negative. Line thickness indicates weight magnitude.</p>\n        </div>\n      </div>\n      \n      <div className=\"bg-gray-50 p-4 rounded\">\n        <h3 className=\"text-lg font-semibold mb-2\">Function Approximation</h3>\n        <div className=\"border rounded bg-white\">\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart\n              margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\n              data={approximationData}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis\n                dataKey=\"x\"\n                label={{ value: 'x', position: 'bottom', offset: 0 }}\n                domain={[-Math.PI * 1.1, Math.PI * 1.1]}\n                tickFormatter={(value) => value.toFixed(2)}\n              />\n              <YAxis\n                label={{ value: 'y', angle: -90, position: 'left', offset: -5 }}\n                domain={[-2, 2]}\n              />\n              <Tooltip formatter={(value, name) => [value.toFixed(4), name]} />\n              <Legend />\n              <Line\n                type=\"monotone\"\n                dataKey=\"y\"\n                name=\"Target Function\"\n                stroke=\"#8884d8\"\n                dot={false}\n                strokeWidth={2}\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"yApprox\"\n                name=\"Approximation Function\"\n                stroke=\"#82ca9d\"\n                dot={false}\n                strokeWidth={2}\n                isAnimationActive={false}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n        <div className=\"mt-2 text-sm\">\n          <p><span className=\"inline-block w-4 h-2 bg-purple-500 mr-1\"></span> Target Function: sin(x) + 0.5*sin(3x) * x²/5</p>\n          <p><span className=\"inline-block w-4 h-2 bg-green-500 mr-1\"></span> Approximation Function: Current network output</p>\n        </div>\n      </div>\n      \n      <div className=\"mt-4 p-4 bg-gray-50 rounded\">\n        <h3 className=\"text-lg font-semibold mb-2\">Training Data and Backpropagation</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <h4 className=\"font-medium mb-1\">Training Data Generation</h4>\n            <p className=\"text-sm mb-1\">How training data is created:</p>\n            <ol className=\"text-sm list-decimal list-inside space-y-1\">\n              <li>Sample 50 x values uniformly in range [-π, π]</li>\n              <li>For each x, calculate y = sin(x) as the target</li>\n              <li>These (x, y) pairs form the training dataset</li>\n              <li>During training, samples are randomly selected</li>\n            </ol>\n          </div>\n          <div>\n            <h4 className=\"font-medium mb-1\">Backpropagation Process</h4>\n            <p className=\"text-sm\">\n              Backpropagation is the core learning algorithm for neural networks:\n            </p>\n            <ul className=\"text-sm list-disc list-inside space-y-1\">\n              <li>Green/red connections show weight values and changes</li>\n              <li>Input node displays current sample's x value</li>\n              <li>Output node shows both network output and target value</li>\n              <li>As training progresses, the approximation function (green line) gets closer to the target function (purple line)</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NeuralNetworkVisualization;\n","import React, { useState } from 'react';\n\nconst StableVAEVisualization = () => {\n  // Latent vector dimensions with initial values\n  const [dimension1, setDimension1] = useState(0);\n  const [dimension2, setDimension2] = useState(0);\n  const [dimension3, setDimension3] = useState(0);\n  \n  // Mode switching\n  const [diffusionMode, setDiffusionMode] = useState(false);\n  \n  // Function to generate SVG representation of flower\n  const generateFlower = (dim1, dim2, dim3) => {\n    // Color interpolation from red to blue\n    const redValue = Math.max(0, Math.min(255, 255 - Math.floor((dim1 + 1) * 127.5)));\n    const blueValue = Math.max(0, Math.min(255, Math.floor((dim1 + 1) * 127.5)));\n    const flowerColor = `rgb(${redValue}, 50, ${blueValue})`;\n    \n    // Bloom level affects petal size\n    const bloomFactor = Math.max(0.1, (dim2 + 1) * 0.45 + 0.1); // 0.1 to 1.0\n    \n    // Shape factor affects petal shape\n    const shapeFactor = dim3; // -1 to 1\n    \n    // Stem\n    const stemHeight = 80;\n    const stemWidth = 4;\n    \n    return (\n      <g transform=\"translate(50, 50)\">\n        {/* Stem */}\n        <rect \n          x={-stemWidth/2} \n          y={0} \n          width={stemWidth} \n          height={stemHeight} \n          fill=\"#2E8B57\" \n        />\n        \n        {/* Leaf */}\n        <path \n          d={`M ${-stemWidth/2},${stemHeight*0.5} C ${-20},${stemHeight*0.4} ${-25},${stemHeight*0.6} ${-10},${stemHeight*0.7}`} \n          fill=\"#3CB371\" \n          stroke=\"#2E8B57\" \n          strokeWidth=\"1\" \n        />\n        \n        {/* Flower center */}\n        <circle cx=\"0\" cy=\"0\" r={10 * bloomFactor} fill=\"#FFD700\" />\n        \n        {/* Petals */}\n        {[...Array(shapeFactor < 0 ? 5 : 8)].map((_, i) => {\n          const angle = (i * 2 * Math.PI) / (shapeFactor < 0 ? 5 : 8);\n          const petalLength = 25 * bloomFactor;\n          const controlPointFactor = shapeFactor < 0 ? 0.4 : 0.8;\n          const controlPoint = petalLength * controlPointFactor;\n          \n          return (\n            <path\n              key={i}\n              d={`\n                M 0,0\n                Q ${Math.cos(angle) * controlPoint},${Math.sin(angle) * controlPoint} \n                  ${Math.cos(angle) * petalLength},${Math.sin(angle) * petalLength}\n                Q ${Math.cos(angle + 0.2) * controlPoint},${Math.sin(angle + 0.2) * controlPoint}\n                  0,0\n              `}\n              fill={flowerColor}\n              stroke={flowerColor}\n              strokeWidth=\"1\"\n              opacity=\"0.9\"\n            />\n          );\n        })}\n      </g>\n    );\n  };\n  \n  // Generate small example flower\n  const generateSmallFlower = (dim1, dim2, dim3) => {\n    return (\n      <svg width=\"60\" height=\"60\" viewBox=\"0 0 100 100\">\n        {generateFlower(dim1, dim2, dim3)}\n      </svg>\n    );\n  };\n  \n  // Generate latent space visualization\n  const generateLatentSpace = () => {\n    // Training point coordinates\n    const trainingPoints = [\n      { x: 25, y: 25, color: \"#3498db\" },  // top-left\n      { x: 75, y: 25, color: \"#3498db\" },  // top-right\n      { x: 25, y: 75, color: \"#3498db\" },  // bottom-left\n      { x: 75, y: 75, color: \"#3498db\" }   // bottom-right\n    ];\n    \n    // Current point coordinates\n    const x = 50 + dimension1 * 25;\n    const y = 50 + dimension2 * 25;\n    \n    return (\n      <svg width=\"180\" height=\"180\" style={{backgroundColor: \"#f0f9ff\", border: \"1px solid #3498db\"}}>\n        {/* Grid lines */}\n        <line x1=\"0\" y1=\"90\" x2=\"180\" y2=\"90\" stroke=\"#3498db\" strokeWidth=\"1\" />\n        <line x1=\"90\" y1=\"0\" x2=\"90\" y2=\"180\" stroke=\"#3498db\" strokeWidth=\"1\" />\n        \n        {/* Axis labels */}\n        <text x=\"170\" y=\"85\" fontSize=\"12\" textAnchor=\"end\">Color</text>\n        <text x=\"95\" y=\"15\" fontSize=\"12\" textAnchor=\"start\">Shape</text>\n        <text x=\"95\" y=\"175\" fontSize=\"12\" textAnchor=\"start\">Bloom</text>\n        \n        {/* Training points */}\n        {trainingPoints.map((point, i) => (\n          <circle key={i} cx={point.x} cy={point.y} r=\"8\" fill={point.color} opacity=\"0.6\" />\n        ))}\n        \n        {/* Current point */}\n        <circle cx={x} cy={y} r=\"10\" fill=\"#e74c3c\" />\n        \n        {/* Diffusion noise */}\n        {diffusionMode && [...Array(10)].map((_, i) => {\n          const noiseX = x + (Math.random() - 0.5) * 20;\n          const noiseY = y + (Math.random() - 0.5) * 20;\n          return (\n            <circle key={i} cx={noiseX} cy={noiseY} r=\"3\" fill=\"#e74c3c\" opacity=\"0.3\" />\n          );\n        })}\n      </svg>\n    );\n  };\n  \n  // Main render\n  return (\n    <div style={{maxWidth: \"800px\", margin: \"0 auto\", padding: \"20px\", fontFamily: \"Arial, sans-serif\"}}>\n      <h1 style={{textAlign: \"center\", marginBottom: \"20px\"}}>VAE Latent Space Exploration</h1>\n      \n      {/* Training data section */}\n      <div style={{marginBottom: \"30px\", backgroundColor: \"white\", padding: \"15px\", borderRadius: \"8px\", boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\"}}>\n        <h2 style={{marginBottom: \"15px\"}}>How VAEs Represent Images</h2>\n        \n        <div style={{display: \"grid\", gridTemplateColumns: \"repeat(3, 1fr)\", gap: \"10px\"}}>\n          <div style={{border: \"1px solid #eee\", padding: \"10px\", borderRadius: \"8px\", backgroundColor: \"#f8f8f8\"}}>\n            <h3 style={{textAlign: \"center\", marginBottom: \"10px\", fontSize: \"16px\"}}>Training Data</h3>\n            <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr\", gap: \"8px\"}}>\n              {generateSmallFlower(-0.8, 0.7, 0.2)}\n              {generateSmallFlower(0.8, 0.6, 0.3)}\n              {generateSmallFlower(-0.7, -0.8, 0.1)}\n              {generateSmallFlower(0.7, -0.5, -0.7)}\n            </div>\n          </div>\n          \n          <div style={{border: \"1px solid #eee\", padding: \"10px\", borderRadius: \"8px\", backgroundColor: \"#f8f8f8\", textAlign: \"center\"}}>\n            <h3 style={{marginBottom: \"10px\", fontSize: \"16px\"}}>Learned Dimensions</h3>\n            <div style={{marginBottom: \"8px\"}}>\n              <div style={{height: \"12px\", background: \"linear-gradient(to right, red, blue)\", borderRadius: \"3px\", marginBottom: \"4px\"}}></div>\n              <div style={{fontSize: \"14px\"}}>Dimension 1: Color</div>\n            </div>\n            <div style={{marginBottom: \"8px\"}}>\n              <div style={{height: \"12px\", background: \"linear-gradient(to right, #e0f7e0, #2e8b57)\", borderRadius: \"3px\", marginBottom: \"4px\"}}></div>\n              <div style={{fontSize: \"14px\"}}>Dimension 2: Bloom</div>\n            </div>\n            <div>\n              <div style={{height: \"12px\", background: \"linear-gradient(to right, #f0e6f6, #8e44ad)\", borderRadius: \"3px\", marginBottom: \"4px\"}}></div>\n              <div style={{fontSize: \"14px\"}}>Dimension 3: Shape</div>\n            </div>\n          </div>\n          \n          <div style={{border: \"1px solid #eee\", padding: \"10px\", borderRadius: \"8px\", backgroundColor: \"#f8f8f8\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n            <h3 style={{marginBottom: \"10px\", fontSize: \"16px\"}}>Continuous Latent Space</h3>\n            <div style={{position: \"relative\", width: \"100px\", height: \"100px\", border: \"1px solid #3498db\", borderRadius: \"4px\", marginTop: \"10px\"}}>\n              <div style={{position: \"absolute\", top: \"45%\", width: \"100%\", height: \"1px\", backgroundColor: \"#3498db\"}}></div>\n              <div style={{position: \"absolute\", left: \"50%\", height: \"100%\", width: \"1px\", backgroundColor: \"#3498db\"}}></div>\n              <div style={{position: \"absolute\", left: \"25%\", top: \"25%\", width: \"8px\", height: \"8px\", borderRadius: \"50%\", backgroundColor: \"#3498db\"}}></div>\n              <div style={{position: \"absolute\", left: \"75%\", top: \"25%\", width: \"8px\", height: \"8px\", borderRadius: \"50%\", backgroundColor: \"#3498db\"}}></div>\n              <div style={{position: \"absolute\", left: \"25%\", top: \"75%\", width: \"8px\", height: \"8px\", borderRadius: \"50%\", backgroundColor: \"#3498db\"}}></div>\n              <div style={{position: \"absolute\", left: \"75%\", top: \"75%\", width: \"8px\", height: \"8px\", borderRadius: \"50%\", backgroundColor: \"#3498db\"}}></div>\n            </div>\n            <div style={{fontSize: \"14px\", marginTop: \"10px\"}}>Any point = a flower</div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Interactive section */}\n      <div style={{marginBottom: \"30px\", backgroundColor: \"white\", padding: \"15px\", borderRadius: \"8px\", boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\"}}>\n        <div style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"15px\"}}>\n          <h2 style={{margin: 0}}>Explore Latent Space</h2>\n          <div>\n            <button \n              onClick={() => setDiffusionMode(true)}\n              style={{\n                padding: \"8px 12px\",\n                marginRight: \"8px\",\n                backgroundColor: diffusionMode ? \"#8e44ad\" : \"#f0f0f0\",\n                color: diffusionMode ? \"white\" : \"black\",\n                border: \"none\",\n                borderRadius: \"4px\",\n                cursor: \"pointer\"\n              }}\n            >\n              Try Latent Diffusion\n            </button>\n            <button \n              onClick={() => setDiffusionMode(false)}\n              style={{\n                padding: \"8px 12px\",\n                backgroundColor: !diffusionMode ? \"#3498db\" : \"#f0f0f0\",\n                color: !diffusionMode ? \"white\" : \"black\",\n                border: \"none\",\n                borderRadius: \"4px\",\n                cursor: \"pointer\"\n              }}\n            >\n              Basic Generation\n            </button>\n          </div>\n        </div>\n        \n        <div style={{display: \"grid\", gridTemplateColumns: \"1fr 1fr 1fr\", gap: \"15px\"}}>\n          {/* Sliders */}\n          <div>\n            <h3 style={{marginBottom: \"15px\", fontSize: \"16px\"}}>Adjust Latent Vector</h3>\n            \n            <div style={{marginBottom: \"20px\"}}>\n              <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"5px\"}}>\n                <label>Flower Color:</label>\n                <span style={{color: \"#3498db\"}}>{dimension1.toFixed(2)}</span>\n              </div>\n              <input \n                type=\"range\" \n                min=\"-1.5\" \n                max=\"1.5\" \n                step=\"0.01\" \n                value={dimension1} \n                onChange={(e) => setDimension1(parseFloat(e.target.value))} \n                style={{width: \"100%\"}}\n              />\n              <div style={{display: \"flex\", justifyContent: \"space-between\", fontSize: \"12px\", color: \"#666\"}}>\n                <span>Red</span>\n                <span>Purple</span>\n                <span>Blue</span>\n              </div>\n            </div>\n            \n            <div style={{marginBottom: \"20px\"}}>\n              <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"5px\"}}>\n                <label>Bloom Stage:</label>\n                <span style={{color: \"#3498db\"}}>{dimension2.toFixed(2)}</span>\n              </div>\n              <input \n                type=\"range\" \n                min=\"-1.5\" \n                max=\"1.5\" \n                step=\"0.01\" \n                value={dimension2} \n                onChange={(e) => setDimension2(parseFloat(e.target.value))} \n                style={{width: \"100%\"}}\n              />\n              <div style={{display: \"flex\", justifyContent: \"space-between\", fontSize: \"12px\", color: \"#666\"}}>\n                <span>Bud</span>\n                <span>Partial</span>\n                <span>Full Bloom</span>\n              </div>\n            </div>\n            \n            <div>\n              <div style={{display: \"flex\", justifyContent: \"space-between\", marginBottom: \"5px\"}}>\n                <label>Flower Shape:</label>\n                <span style={{color: \"#3498db\"}}>{dimension3.toFixed(2)}</span>\n              </div>\n              <input \n                type=\"range\" \n                min=\"-1.5\" \n                max=\"1.5\" \n                step=\"0.01\" \n                value={dimension3} \n                onChange={(e) => setDimension3(parseFloat(e.target.value))} \n                style={{width: \"100%\"}}\n              />\n              <div style={{display: \"flex\", justifyContent: \"space-between\", fontSize: \"12px\", color: \"#666\"}}>\n                <span>Tulip-like</span>\n                <span>Mixed</span>\n                <span>Rose-like</span>\n              </div>\n            </div>\n          </div>\n          \n          {/* Latent Space */}\n          <div style={{textAlign: \"center\"}}>\n            <h3 style={{marginBottom: \"15px\", fontSize: \"16px\"}}>Latent Space</h3>\n            {generateLatentSpace()}\n            {(Math.abs(dimension1) > 1 || Math.abs(dimension2) > 1 || Math.abs(dimension3) > 1) && (\n              <div style={{\n                fontSize: \"12px\", \n                padding: \"4px 8px\", \n                backgroundColor: \"#fff9e0\", \n                borderRadius: \"4px\", \n                marginTop: \"8px\",\n                display: \"inline-block\"\n              }}>\n                Exploring beyond training data!\n              </div>\n            )}\n          </div>\n          \n          {/* Generated Flower */}\n          <div style={{textAlign: \"center\"}}>\n            <h3 style={{marginBottom: \"15px\", fontSize: \"16px\"}}>Generated Flower</h3>\n            <svg width=\"180\" height=\"180\" viewBox=\"0 0 100 100\" style={{backgroundColor: \"#f8f8f8\", borderRadius: \"4px\"}}>\n              {generateFlower(dimension1, dimension2, dimension3)}\n            </svg>\n            \n            {diffusionMode && (\n              <div style={{marginTop: \"10px\", padding: \"8px\", backgroundColor: \"white\", borderRadius: \"4px\", boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\"}}>\n                <p style={{fontSize: \"14px\", marginBottom: \"5px\", fontWeight: \"500\"}}>Diffusion Process</p>\n                <div style={{display: \"flex\", justifyContent: \"center\", gap: \"5px\"}}>\n                  {[...Array(5)].map((_, i) => {\n                    const opacity = 0.2 + (i / 5) * 0.8;\n                    return (\n                      <div key={i} style={{opacity}}>\n                        <svg width=\"32\" height=\"32\" viewBox=\"0 0 100 100\" style={{backgroundColor: \"#f0f0f0\", borderRadius: \"2px\"}}>\n                          {generateFlower(\n                            dimension1 + (0.5 - i/10) * (Math.random() - 0.5), \n                            dimension2 + (0.5 - i/10) * (Math.random() - 0.5), \n                            dimension3 + (0.5 - i/10) * (Math.random() - 0.5)\n                          )}\n                        </svg>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      \n      {/* Explanation */}\n      <div style={{backgroundColor: \"white\", padding: \"15px\", borderRadius: \"8px\", boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\"}}>\n        <h2 style={{marginBottom: \"15px\"}}>How VAEs & Latent Diffusion Work</h2>\n        \n        <div style={{marginBottom: \"20px\"}}>\n          <h3 style={{fontSize: \"18px\", marginBottom: \"10px\"}}>VAE Latent Space</h3>\n          <p style={{marginBottom: \"10px\"}}>Variational Autoencoders (VAEs) learn to compress images into a continuous latent space where:</p>\n          <ul style={{paddingLeft: \"20px\", marginBottom: \"10px\"}}>\n            <li>Similar features are mapped to similar regions</li>\n            <li>Each dimension controls a specific visual attribute</li>\n            <li>The space is continuous, allowing smooth interpolation</li>\n            <li>Novel combinations beyond training data can be generated</li>\n          </ul>\n        </div>\n        \n        <div>\n          <h3 style={{fontSize: \"18px\", marginBottom: \"10px\"}}>Latent Diffusion</h3>\n          <p style={{marginBottom: \"10px\"}}>Diffusion models like Stable Diffusion extend this by:</p>\n          <ol style={{paddingLeft: \"20px\"}}>\n            <li>Adding noise to latent vectors to create variations</li>\n            <li>Learning to remove noise in a controlled way</li>\n            <li>Enabling text-guided latent space navigation</li>\n            <li>Allowing for creative generation beyond the training distribution</li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StableVAEVisualization;\n","import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst OptimizerComparison = () => {\n  useEffect(() => {\n    renderVisualization();\n    return () => d3.select('#viz-container').selectAll('*').remove();\n  }, []);\n  \n  const renderVisualization = () => {\n    // Setup\n    const width = 600, height = 500;\n    const margin = { top: 40, right: 40, bottom: 40, left: 40 };\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n    \n    const svg = d3.select('#viz-container')\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\n    \n    // Loss curves\n    const iterations = 100;\n    const xScale = d3.scaleLinear()\n      .domain([0, iterations])\n      .range([0, innerWidth]);\n    \n    const yScale = d3.scaleLinear()\n      .domain([0, 1])\n      .range([innerHeight, 0]);\n    \n    // Generate loss data for different optimizers\n    const sgdData = [];\n    const adamData = [];\n    const adamWData = [];\n    \n    for (let i = 0; i <= iterations; i++) {\n      // SGD has long plateau at saddle point\n      let sgdLoss = 0;\n      if (i <= 30) sgdLoss = Math.exp(-0.05 * i) * 0.8 + 0.2;\n      else if (i <= 80) sgdLoss = 0.2 - 0.001 * (i - 30); // Long plateau\n      else sgdLoss = 0.15 - 0.005 * (i - 80);\n      \n      // Adam moves through saddle point efficiently\n      let adamLoss = 0;\n      if (i <= 30) adamLoss = Math.exp(-0.05 * i) * 0.8 + 0.2;\n      else if (i <= 40) adamLoss = 0.2 - 0.005 * (i - 30); // Brief plateau\n      else adamLoss = 0.15 * Math.exp(-0.05 * (i - 40)) + 0.05;\n      \n      // AdamW handles saddle point even better with weight decay\n      let adamWLoss = 0;\n      if (i <= 30) adamWLoss = Math.exp(-0.05 * i) * 0.8 + 0.2;\n      else if (i <= 37) adamWLoss = 0.2 - 0.008 * (i - 30); // Even shorter plateau\n      else adamWLoss = 0.12 * Math.exp(-0.06 * (i - 37)) + 0.03;\n      \n      sgdData.push({ x: i, y: sgdLoss });\n      adamData.push({ x: i, y: adamLoss });\n      adamWData.push({ x: i, y: adamWLoss });\n    }\n    \n    // Draw axes\n    svg.append('g')\n      .attr('transform', `translate(0, ${innerHeight})`)\n      .call(d3.axisBottom(xScale).ticks(5))\n      .append('text')\n      .attr('x', innerWidth / 2)\n      .attr('y', 35)\n      .attr('fill', 'black')\n      .attr('text-anchor', 'middle')\n      .text('Iterations');\n    \n    svg.append('g')\n      .call(d3.axisLeft(yScale).ticks(5))\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('x', -innerHeight / 2)\n      .attr('y', -35)\n      .attr('fill', 'black')\n      .attr('text-anchor', 'middle')\n      .text('Loss');\n    \n    // Create line generator\n    const line = d3.line()\n      .x(d => xScale(d.x))\n      .y(d => yScale(d.y))\n      .curve(d3.curveBasis);\n    \n    // Draw SGD loss curve\n    svg.append('path')\n      .datum(sgdData)\n      .attr('fill', 'none')\n      .attr('stroke', 'blue')\n      .attr('stroke-width', 3)\n      .attr('stroke-dasharray', '5,5')\n      .attr('d', line);\n    \n    // Draw Adam loss curve\n    svg.append('path')\n      .datum(adamData)\n      .attr('fill', 'none')\n      .attr('stroke', 'green')\n      .attr('stroke-width', 3)\n      .attr('d', line);\n    \n    // Draw AdamW loss curve\n    svg.append('path')\n      .datum(adamWData)\n      .attr('fill', 'none')\n      .attr('stroke', 'purple')\n      .attr('stroke-width', 3)\n      .attr('d', line);\n    \n    // Highlight saddle point region\n    svg.append('rect')\n      .attr('x', xScale(30))\n      .attr('y', yScale(0.25))\n      .attr('width', xScale(80) - xScale(30))\n      .attr('height', yScale(0.15) - yScale(0.25))\n      .attr('fill', 'rgba(255, 255, 0, 0.2)')\n      .attr('stroke', 'orange')\n      .attr('stroke-dasharray', '3,3');\n    \n    svg.append('text')\n      .attr('x', xScale(55))\n      .attr('y', yScale(0.27))\n      .attr('text-anchor', 'middle')\n      .attr('font-size', '12px')\n      .text('Saddle Point Region');\n    \n    // Add annotations\n    svg.append('text')\n      .attr('x', xScale(70))\n      .attr('y', yScale(0.19))\n      .attr('text-anchor', 'middle')\n      .attr('font-size', '12px')\n      .attr('fill', 'blue')\n      .attr('font-weight', 'bold')\n      .text('SGD gets stuck');\n    \n    svg.append('text')\n      .attr('x', xScale(60))\n      .attr('y', yScale(0.08))\n      .attr('text-anchor', 'middle')\n      .attr('font-size', '12px')\n      .attr('fill', 'green')\n      .attr('font-weight', 'bold')\n      .text('Adam escapes');\n    \n    svg.append('text')\n      .attr('x', xScale(50))\n      .attr('y', yScale(0.04))\n      .attr('text-anchor', 'middle')\n      .attr('font-size', '12px')\n      .attr('fill', 'purple')\n      .attr('font-weight', 'bold')\n      .text('AdamW escapes faster');\n    \n    // Add title\n    svg.append('text')\n      .attr('x', innerWidth / 2)\n      .attr('y', -20)\n      .attr('text-anchor', 'middle')\n      .attr('font-size', '16px')\n      .attr('font-weight', 'bold')\n      .text('Optimizer Comparison at Saddle Points');\n    \n    // Add legend with full names\n    const legend = svg.append('g')\n      .attr('transform', `translate(${innerWidth - 250}, 20)`);\n    \n    legend.append('line')\n      .attr('x1', 0)\n      .attr('y1', 0)\n      .attr('x2', 20)\n      .attr('y2', 0)\n      .attr('stroke', 'blue')\n      .attr('stroke-width', 2)\n      .attr('stroke-dasharray', '5,5');\n    \n    legend.append('text')\n      .attr('x', 25)\n      .attr('y', 5)\n      .attr('font-size', '12px')\n      .text('SGD (Stochastic Gradient Descent)');\n    \n    legend.append('line')\n      .attr('x1', 0)\n      .attr('y1', 20)\n      .attr('x2', 20)\n      .attr('y2', 20)\n      .attr('stroke', 'green')\n      .attr('stroke-width', 2);\n    \n    legend.append('text')\n      .attr('x', 25)\n      .attr('y', 25)\n      .attr('font-size', '12px')\n      .text('Adam (Adaptive Moment Estimation)');\n    \n    legend.append('line')\n      .attr('x1', 0)\n      .attr('y1', 40)\n      .attr('x2', 20)\n      .attr('y2', 40)\n      .attr('stroke', 'purple')\n      .attr('stroke-width', 2);\n    \n    legend.append('text')\n      .attr('x', 25)\n      .attr('y', 45)\n      .attr('font-size', '12px')\n      .text('AdamW (Adam with Decoupled Weight Decay)');\n    \n    // Draw small saddle function visualization\n    const saddleSize = 120;\n    const saddleX = 100;\n    const saddleY = 150;\n    \n    // Create a small saddle function visualization\n    const saddle = svg.append('g')\n      .attr('transform', `translate(${saddleX}, ${saddleY})`);\n    \n    // Add background for the saddle visualization\n    saddle.append('rect')\n      .attr('x', -10)\n      .attr('y', -10)\n      .attr('width', saddleSize + 20)\n      .attr('height', saddleSize + 20)\n      .attr('fill', 'rgba(240, 240, 240, 0.8)')\n      .attr('rx', 10);\n    \n    // Draw simplified saddle surface\n    const saddleScale = d3.scaleLinear().domain([-1, 1]).range([0, saddleSize]);\n    \n    // Create grid points for the saddle\n    const points = [];\n    for (let x = -1; x <= 1; x += 0.1) {\n      for (let y = -1; y <= 1; y += 0.1) {\n        const z = x * x - y * y; // Saddle function\n        points.push({ x, y, z });\n      }\n    }\n    \n    // Color scale for height\n    const colorScale = d3.scaleLinear()\n      .domain([-1, 0, 1])\n      .range(['steelblue', 'white', 'firebrick']);\n    \n    // Draw saddle points\n    saddle.selectAll('.saddle-point')\n      .data(points)\n      .enter()\n      .append('circle')\n      .attr('cx', d => saddleScale(d.x))\n      .attr('cy', d => saddleScale(d.y))\n      .attr('r', 3)\n      .attr('fill', d => colorScale(d.z))\n      .attr('opacity', 0.7);\n    \n    // Draw simplified trajectories on the saddle\n    const sgdSaddleTrajectory = [\n      { x: -0.8, y: 0.2 }, { x: -0.5, y: 0.1 }, { x: -0.2, y: 0.05 },\n      { x: -0.1, y: 0.02 }, { x: -0.05, y: 0.01 }, { x: -0.02, y: 0.005 },\n      { x: -0.01, y: 0.002 }, { x: 0, y: 0 } // Gets stuck\n    ];\n    \n    const adamSaddleTrajectory = [\n      { x: -0.8, y: 0.2 }, { x: -0.5, y: 0.1 }, { x: -0.2, y: 0.05 },\n      { x: 0, y: 0 }, { x: 0.2, y: -0.1 }, { x: 0.4, y: -0.2 },\n      { x: 0.6, y: -0.3 }, { x: 0.8, y: -0.4 } // Passes through\n    ];\n    \n    const adamWSaddleTrajectory = [\n      { x: -0.8, y: 0.2 }, { x: -0.4, y: 0.1 }, { x: -0.1, y: 0.03 },\n      { x: 0, y: -0.02 }, { x: 0.15, y: -0.15 }, { x: 0.35, y: -0.3 },\n      { x: 0.6, y: -0.5 }, { x: 0.9, y: -0.7 } // Passes through with more direct path\n    ];\n    \n    // Draw SGD path on saddle\n    saddle.append('path')\n      .datum(sgdSaddleTrajectory)\n      .attr('fill', 'none')\n      .attr('stroke', 'blue')\n      .attr('stroke-width', 2)\n      .attr('stroke-dasharray', '3,3')\n      .attr('d', d3.line()\n        .x(d => saddleScale(d.x))\n        .y(d => saddleScale(d.y))\n        .curve(d3.curveBasis));\n    \n    // Draw Adam path on saddle\n    saddle.append('path')\n      .datum(adamSaddleTrajectory)\n      .attr('fill', 'none')\n      .attr('stroke', 'green')\n      .attr('stroke-width', 2)\n      .attr('d', d3.line()\n        .x(d => saddleScale(d.x))\n        .y(d => saddleScale(d.y))\n        .curve(d3.curveBasis));\n    \n    // Draw AdamW path on saddle\n    saddle.append('path')\n      .datum(adamWSaddleTrajectory)\n      .attr('fill', 'none')\n      .attr('stroke', 'purple')\n      .attr('stroke-width', 2)\n      .attr('d', d3.line()\n        .x(d => saddleScale(d.x))\n        .y(d => saddleScale(d.y))\n        .curve(d3.curveBasis));\n    \n    // Mark saddle point\n    saddle.append('circle')\n      .attr('cx', saddleScale(0))\n      .attr('cy', saddleScale(0))\n      .attr('r', 5)\n      .attr('fill', 'yellow')\n      .attr('stroke', 'black');\n    \n    // Add saddle title\n    saddle.append('text')\n      .attr('x', saddleSize / 2)\n      .attr('y', -5)\n      .attr('text-anchor', 'middle')\n      .attr('font-size', '12px')\n      .attr('font-weight', 'bold')\n      .text('Saddle Point (x² - y²)');\n  };\n  \n  return (\n    <div className=\"w-full max-w-4xl mx-auto\">\n      <div id=\"viz-container\" className=\"w-full h-[500px] border rounded bg-white p-4\"></div>\n      \n      <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4 bg-gray-50 p-4 rounded-lg\">\n        <div className=\"bg-white p-4 rounded shadow\">\n          <h3 className=\"text-lg font-bold text-blue-700 mb-2\">Stochastic Gradient Descent (SGD)</h3>\n          <p>Uses the same learning rate for all parameters and applies no momentum by default. Near saddle points, all gradients become very small, causing SGD to slow down dramatically or get \"stuck\" for many iterations.</p>\n        </div>\n        \n        <div className=\"bg-white p-4 rounded shadow\">\n          <h3 className=\"text-lg font-bold text-green-700 mb-2\">Adaptive Moment Estimation (Adam)</h3>\n          <p>Maintains separate learning rates for each parameter based on gradient history. These adaptive rates automatically increase when gradients are consistently small, allowing it to escape saddle points faster.</p>\n        </div>\n        \n        <div className=\"bg-white p-4 rounded shadow\">\n          <h3 className=\"text-lg font-bold text-purple-700 mb-2\">Adam with Decoupled Weight Decay (AdamW)</h3>\n          <p>Extends Adam by applying weight decay directly to weights rather than to gradients. This decoupling helps break symmetry at saddle points and provides better regularization, often resulting in even faster escape.</p>\n        </div>\n        \n        <div className=\"col-span-1 md:col-span-3 bg-yellow-50 p-4 rounded shadow\">\n          <h3 className=\"text-lg font-bold mb-2\">Mathematical Components of Adaptive Methods</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <h4 className=\"font-bold\">How Adam Works:</h4>\n              <ul className=\"list-disc pl-5 space-y-1\">\n                <li><span className=\"font-semibold\">First Moment:</span> m<sub>t</sub> = β<sub>1</sub>·m<sub>t-1</sub> + (1-β<sub>1</sub>)·g<sub>t</sub> (provides momentum)</li>\n                <li><span className=\"font-semibold\">Second Moment:</span> v<sub>t</sub> = β<sub>2</sub>·v<sub>t-1</sub> + (1-β<sub>2</sub>)·g<sub>t</sub>² (estimates variance)</li>\n                <li><span className=\"font-semibold\">Bias Correction:</span> m̂<sub>t</sub> = m<sub>t</sub>/(1-β<sub>1</sub><sup>t</sup>), v̂<sub>t</sub> = v<sub>t</sub>/(1-β<sub>2</sub><sup>t</sup>)</li>\n                <li><span className=\"font-semibold\">Parameter Update:</span> θ<sub>t+1</sub> = θ<sub>t</sub> - α·m̂<sub>t</sub>/(√v̂<sub>t</sub> + ε)</li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-bold\">How AdamW Differs:</h4>\n              <ul className=\"list-disc pl-5 space-y-1\">\n                <li><span className=\"font-semibold\">Standard Adam:</span> Applies L2 regularization within gradient: g<sub>t</sub> = ∇f(θ<sub>t</sub>) + λθ<sub>t</sub></li>\n                <li><span className=\"font-semibold\">AdamW:</span> Decouples weight decay: θ<sub>t+1</sub> = θ<sub>t</sub> - α·m̂<sub>t</sub>/(√v̂<sub>t</sub> + ε) - α·λ·θ<sub>t</sub></li>\n                <li><span className=\"font-semibold\">Benefit:</span> More effective regularization that is independent of gradient magnitude</li>\n                <li><span className=\"font-semibold\">Saddle Point Impact:</span> Helps overcome symmetrical parameter distributions often found at saddle points</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OptimizerComparison;\n","import React, { useState, useEffect } from 'react';\n\nconst TrainingDataVisualization = () => {\n  // State for controlling parameters\n  const [batchSize, setBatchSize] = useState(10);\n  const [currentEpoch, setCurrentEpoch] = useState(1);\n  const [currentBatch, setCurrentBatch] = useState(1);\n  const [totalBatches, setTotalBatches] = useState(10);\n  const [dataColors, setDataColors] = useState([]);\n  const [shuffleEnabled, setShuffleEnabled] = useState(false);\n  const [shuffledIndices, setShuffledIndices] = useState({});\n  const totalData = 100;\n\n  // Generate distinct colors for each data point\n  useEffect(() => {\n    const colors = [];\n    for (let i = 0; i < totalData; i++) {\n      // Generate hue values evenly distributed around the color wheel\n      const hue = (i * 360 / totalData) % 360;\n      // Use high saturation and medium lightness for vibrant, distinguishable colors\n      colors.push(`hsl(${hue}, 80%, 60%)`);\n    }\n    setDataColors(colors);\n  }, []);\n\n  // Calculate total batches whenever batch size changes\n  useEffect(() => {\n    const batches = Math.ceil(totalData / batchSize);\n    setTotalBatches(batches);\n    // Reset current batch if it exceeds the new total\n    if (currentBatch > batches) {\n      setCurrentBatch(1);\n    }\n  }, [batchSize, currentBatch]);\n\n  // Generate shuffled indices for a given epoch if they don't already exist\n  useEffect(() => {\n    if (shuffleEnabled && !shuffledIndices[currentEpoch]) {\n      // Create a new shuffled array for this epoch\n      const indices = Array.from({ length: totalData }, (_, i) => i);\n      \n      // Fisher-Yates shuffle algorithm with a seeded random based on the epoch\n      // This ensures the same epoch always has the same shuffle pattern\n      const shuffled = [...indices];\n      const seed = currentEpoch * 1337; // Simple seeding mechanism\n      let m = shuffled.length, t, i;\n      \n      // Seeded random number generator\n      const seededRandom = () => {\n        const x = Math.sin(seed + m--) * 10000;\n        return x - Math.floor(x);\n      };\n      \n      // Shuffle algorithm\n      while (m) {\n        i = Math.floor(seededRandom() * m--);\n        t = shuffled[m];\n        shuffled[m] = shuffled[i];\n        shuffled[i] = t;\n      }\n      \n      setShuffledIndices(prev => ({\n        ...prev,\n        [currentEpoch]: shuffled\n      }));\n    }\n  }, [currentEpoch, shuffleEnabled, shuffledIndices]);\n\n  // Determine which data points are in the current batch\n  const getCurrentBatchIndices = () => {\n    // If shuffle is enabled and we have shuffled indices for the current epoch, use those\n    if (shuffleEnabled && shuffledIndices[currentEpoch]) {\n      const ordering = shuffledIndices[currentEpoch];\n      const startIdx = (currentBatch - 1) * batchSize;\n      const endIdx = Math.min(startIdx + batchSize, totalData);\n      \n      // Get the actual indices based on the shuffled ordering\n      return Array.from({ length: endIdx - startIdx }, (_, i) => ordering[startIdx + i]);\n    } else {\n      // No shuffling, use sequential ordering\n      const startIdx = (currentBatch - 1) * batchSize;\n      const endIdx = Math.min(startIdx + batchSize, totalData);\n      return Array.from({ length: endIdx - startIdx }, (_, i) => startIdx + i);\n    }\n  };\n\n  // Get indices for data points in the current batch\n  const currentBatchIndices = getCurrentBatchIndices();\n\n  // Handle batch size change\n  const handleBatchSizeChange = (e) => {\n    const newSize = parseInt(e.target.value, 10);\n    if (newSize >= 1 && newSize <= totalData) {\n      setBatchSize(newSize);\n    }\n  };\n\n  // Handle epoch change\n  const handleEpochChange = (e) => {\n    const newEpoch = parseInt(e.target.value, 10);\n    if (newEpoch >= 1) {\n      setCurrentEpoch(newEpoch);\n    }\n  };\n\n  // Handle batch change\n  const handleBatchChange = (e) => {\n    const newBatch = parseInt(e.target.value, 10);\n    if (newBatch >= 1 && newBatch <= totalBatches) {\n      setCurrentBatch(newBatch);\n    }\n  };\n\n  // Move to next batch or epoch\n  const handleNextBatch = () => {\n    if (currentBatch < totalBatches) {\n      setCurrentBatch(currentBatch + 1);\n    } else {\n      setCurrentBatch(1);\n      setCurrentEpoch(currentEpoch + 1);\n    }\n  };\n\n  // Move to previous batch or epoch\n  const handlePrevBatch = () => {\n    if (currentBatch > 1) {\n      setCurrentBatch(currentBatch - 1);\n    } else if (currentEpoch > 1) {\n      setCurrentEpoch(currentEpoch - 1);\n      setCurrentBatch(totalBatches);\n    }\n  };\n\n  // Render grid items\n  const renderDataPoints = () => {\n    return Array.from({ length: totalData }, (_, idx) => {\n      const isActive = currentBatchIndices.includes(idx);\n      return (\n        <div \n          key={idx}\n          className={`\n            data-point\n            ${isActive ? 'active' : 'inactive'}\n          `}\n          style={{ \n            backgroundColor: dataColors[idx]\n          }}\n        >\n          {idx + 1}\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className=\"visualization-container\">\n      <h1 className=\"main-title\">Training Data Epoch and Batch Visualization</h1>\n      \n      {/* Controls section */}\n      <div className=\"controls-section\">\n        <div className=\"control-group\">\n          <div className=\"control-item\">\n            <label>Batch Size:</label>\n            <div className=\"input-container\">\n              <input\n                type=\"number\"\n                value={batchSize}\n                onChange={handleBatchSizeChange}\n                min=\"1\"\n                max={totalData}\n                className=\"number-input\"\n              />\n              <input\n                type=\"range\"\n                value={batchSize}\n                onChange={handleBatchSizeChange}\n                min=\"1\"\n                max={totalData}\n                className=\"range-input\"\n              />\n            </div>\n          </div>\n          \n          <div className=\"control-item\">\n            <label>Current Epoch:</label>\n            <div className=\"input-container\">\n              <input\n                type=\"number\"\n                value={currentEpoch}\n                onChange={handleEpochChange}\n                min=\"1\"\n                className=\"number-input\"\n              />\n            </div>\n          </div>\n          \n          <div className=\"control-item\">\n            <label>Current Batch:</label>\n            <div className=\"input-container\">\n              <input\n                type=\"number\"\n                value={currentBatch}\n                onChange={handleBatchChange}\n                min=\"1\"\n                max={totalBatches}\n                className=\"number-input\"\n              />\n              <input\n                type=\"range\"\n                value={currentBatch}\n                onChange={handleBatchChange}\n                min=\"1\"\n                max={totalBatches}\n                className=\"range-input\"\n              />\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"shuffle-option\">\n          <label className=\"shuffle-label\">\n            <input\n              type=\"checkbox\"\n              checked={shuffleEnabled}\n              onChange={() => {\n                // Reset shuffled indices when toggling shuffle to ensure a clean state\n                if (!shuffleEnabled) {\n                  setShuffledIndices({});\n                }\n                setShuffleEnabled(!shuffleEnabled);\n              }}\n              className=\"shuffle-checkbox\"\n            />\n            <span>Shuffle Data Between Epochs</span>\n          </label>\n        </div>\n        \n        <div className=\"control-buttons\">\n          <button \n            onClick={handlePrevBatch} \n            className=\"control-button\"\n          >\n            Previous Batch\n          </button>\n          <button \n            onClick={handleNextBatch} \n            className=\"control-button\"\n          >\n            Next Batch\n          </button>\n        </div>\n      </div>\n      \n      {/* Status information */}\n      <div className=\"status-section\">\n        <h2>Current Status:</h2>\n        <div className=\"status-grid\">\n          <div className=\"status-column\">\n            <p><span className=\"status-label\">Total Training Data:</span> {totalData}</p>\n            <p><span className=\"status-label\">Batch Size:</span> {batchSize}</p>\n            <p><span className=\"status-label\">Total Batches per Epoch:</span> {totalBatches}</p>\n            <p><span className=\"status-label\">Shuffle Between Epochs:</span> {shuffleEnabled ? 'Enabled' : 'Disabled'}</p>\n          </div>\n          <div className=\"status-column\">\n            <p><span className=\"status-label\">Current Epoch:</span> {currentEpoch}</p>\n            <p><span className=\"status-label\">Current Batch:</span> {currentBatch} of {totalBatches}</p>\n            <p><span className=\"status-label\">Data Points in Current Batch:</span> {currentBatchIndices.length}</p>\n          </div>\n        </div>\n      </div>\n      \n      {/* Data visualization grid */}\n      <div className=\"visualization-section\">\n        <h2>Data Point Visualization:</h2>\n        <div className=\"data-grid\">\n          {renderDataPoints()}\n        </div>\n      </div>\n      \n      {/* Legend */}\n      <div className=\"legend-section\">\n        <h2>How to Read This Visualization:</h2>\n        <ul className=\"legend-list\">\n          <li>Each colored square represents one training data point (numbered 1-100)</li>\n          <li>Data points in the current batch are highlighted and slightly larger</li>\n          <li>Adjust the batch size to see how data is divided into batches</li>\n          <li>Navigate through batches to see how the model would process data points</li>\n          <li>Each complete pass through all batches represents one epoch</li>\n          <li>When \"Shuffle Between Epochs\" is enabled, data points are randomly reordered for each epoch (but remain consistent within an epoch)</li>\n        </ul>\n      </div>\n\n      <style jsx>{`\n        .visualization-container {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n          max-width: 1200px;\n          margin: 0 auto;\n          padding: 16px;\n          background-color: white;\n          border-radius: 8px;\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        }\n        \n        .main-title {\n          font-size: 24px;\n          font-weight: bold;\n          margin-bottom: 24px;\n          text-align: center;\n        }\n        \n        .controls-section {\n          margin-bottom: 24px;\n          padding: 16px;\n          background-color: #f8f9fa;\n          border-radius: 8px;\n        }\n        \n        .control-group {\n          display: grid;\n          grid-template-columns: 1fr;\n          gap: 16px;\n          margin-bottom: 16px;\n        }\n        \n        @media (min-width: 640px) {\n          .control-group {\n            grid-template-columns: repeat(2, 1fr);\n          }\n        }\n        \n        @media (min-width: 768px) {\n          .control-group {\n            grid-template-columns: repeat(3, 1fr);\n          }\n        }\n        \n        .control-item {\n          margin-bottom: 8px;\n        }\n        \n        .control-item label {\n          display: block;\n          font-size: 14px;\n          font-weight: 500;\n          margin-bottom: 4px;\n        }\n        \n        .input-container {\n          display: flex;\n          align-items: center;\n        }\n        \n        .number-input {\n          width: 60px;\n          padding: 6px;\n          border: 1px solid #d1d5db;\n          border-radius: 4px;\n          margin-right: 8px;\n        }\n        \n        .range-input {\n          flex-grow: 1;\n        }\n        \n        .shuffle-option {\n          margin-bottom: 16px;\n        }\n        \n        .shuffle-label {\n          display: flex;\n          align-items: center;\n          cursor: pointer;\n        }\n        \n        .shuffle-checkbox {\n          margin-right: 8px;\n        }\n        \n        .control-buttons {\n          display: flex;\n          justify-content: center;\n          gap: 8px;\n        }\n        \n        .control-button {\n          padding: 8px 16px;\n          background-color: #3b82f6;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n          font-size: 14px;\n        }\n        \n        .control-button:hover {\n          background-color: #2563eb;\n        }\n        \n        .status-section {\n          margin-bottom: 24px;\n          padding: 16px;\n          background-color: #e6f2ff;\n          border-radius: 8px;\n        }\n        \n        .status-section h2 {\n          font-size: 18px;\n          font-weight: 600;\n          margin-bottom: 12px;\n        }\n        \n        .status-grid {\n          display: grid;\n          grid-template-columns: 1fr;\n          gap: 16px;\n        }\n        \n        @media (min-width: 640px) {\n          .status-grid {\n            grid-template-columns: repeat(2, 1fr);\n          }\n        }\n        \n        .status-label {\n          font-weight: 500;\n        }\n        \n        .visualization-section {\n          margin-bottom: 24px;\n          padding: 16px;\n          border: 1px solid #d1d5db;\n          border-radius: 8px;\n        }\n        \n        .visualization-section h2 {\n          font-size: 18px;\n          font-weight: 600;\n          margin-bottom: 16px;\n        }\n        \n        .data-grid {\n          display: grid;\n          grid-template-columns: repeat(5, 1fr);\n          gap: 4px;\n        }\n        \n        @media (min-width: 480px) {\n          .data-grid {\n            grid-template-columns: repeat(8, 1fr);\n          }\n        }\n        \n        @media (min-width: 640px) {\n          .data-grid {\n            grid-template-columns: repeat(10, 1fr);\n          }\n        }\n        \n        @media (min-width: 768px) {\n          .data-grid {\n            gap: 8px;\n          }\n        }\n        \n        .data-point {\n          aspect-ratio: 1/1;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border-radius: 4px;\n          font-size: 12px;\n          font-weight: bold;\n          transition: all 0.2s ease;\n          color: white;\n        }\n        \n        @media (min-width: 640px) {\n          .data-point {\n            font-size: 14px;\n          }\n        }\n        \n        .data-point.active {\n          transform: scale(1.1);\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n          z-index: 10;\n          border: 2px solid white;\n        }\n        \n        .data-point.inactive {\n          opacity: 0.4;\n          filter: brightness(0.75);\n          color: rgba(255, 255, 255, 0.6);\n        }\n        \n        .legend-section {\n          padding: 16px;\n          background-color: #f8f9fa;\n          border-radius: 8px;\n        }\n        \n        .legend-section h2 {\n          font-size: 18px;\n          font-weight: 600;\n          margin-bottom: 12px;\n        }\n        \n        .legend-list {\n          list-style-type: disc;\n          padding-left: 20px;\n        }\n        \n        .legend-list li {\n          margin-bottom: 4px;\n          font-size: 14px;\n        }\n        \n        @media (min-width: 640px) {\n          .legend-list li {\n            font-size: 16px;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default TrainingDataVisualization;\n","import React, { useState } from 'react';\n\nconst NeuralNetworkVisualizer = () => {\n  // Basic styles as objects to ensure they apply without relying on Tailwind\n  const styles = {\n    container: {\n      padding: '20px',\n      maxWidth: '1000px',\n      margin: '0 auto',\n      backgroundColor: '#f8fafc',\n      borderRadius: '12px',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      fontFamily: 'Arial, sans-serif'\n    },\n    heading: {\n      textAlign: 'center',\n      fontSize: '24px',\n      fontWeight: 'bold',\n      marginBottom: '24px'\n    },\n    compareContainer: {\n      backgroundColor: '#f1f5f9',\n      padding: '24px',\n      borderRadius: '8px'\n    },\n    section: {\n      backgroundColor: 'white',\n      padding: '16px',\n      borderRadius: '8px',\n      boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n      marginBottom: '32px'\n    },\n    sectionTitle: {\n      fontSize: '18px',\n      fontWeight: 'bold',\n      marginBottom: '8px'\n    },\n    subtitle: {\n      color: '#3b82f6',\n      fontSize: '14px',\n      marginBottom: '16px'\n    },\n    description: {\n      fontSize: '12px',\n      color: '#4b5563',\n      marginTop: '16px'\n    },\n    keyPoints: {\n      marginTop: '32px',\n      fontSize: '14px'\n    },\n    keyPointsTitle: {\n      fontSize: '18px',\n      fontWeight: 'bold',\n      marginBottom: '8px'\n    },\n    keyComponentsTitle: {\n      fontSize: '18px',\n      fontWeight: 'bold',\n      marginTop: '24px',\n      marginBottom: '8px'\n    },\n    detailsContainer: {\n      backgroundColor: 'white',\n      padding: '16px',\n      borderRadius: '8px',\n      boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)'\n    },\n    componentTitle: {\n      color: '#4f46e5',\n      fontSize: '14px',\n      fontWeight: '600',\n      marginBottom: '8px'\n    },\n    termList: {\n      marginTop: '16px'\n    },\n    term: {\n      color: '#ca8a04',\n      fontSize: '14px',\n      fontWeight: '500'\n    },\n    definition: {\n      marginLeft: '16px',\n      marginBottom: '16px'\n    },\n    // Architecture component styles\n    architectureContainer: {\n      display: 'flex',\n      marginBottom: '24px'\n    },\n    architectureSimpleContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    flowContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginBottom: '16px'\n    },\n    verticalColumn: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    box: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: '8px',\n      textAlign: 'center',\n      borderRadius: '8px',\n      boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n      margin: '0 8px',\n      position: 'relative',\n      fontSize: '12px',\n      fontWeight: '600'\n    },\n    inputBox: {\n      backgroundColor: '#dbeafe',\n      width: '80px',\n      height: '160px',\n    },\n    encoderBox: {\n      backgroundColor: '#dcfce7',\n      width: '96px',\n      height: '128px',\n      border: '2px solid transparent'\n    },\n    latentBox: {\n      backgroundColor: '#fef9c3',\n      width: '64px',\n      height: '64px'\n    },\n    decoderBox: {\n      backgroundColor: '#f3e8ff',\n      width: '96px',\n      height: '128px',\n      border: '2px solid transparent'\n    },\n    outputBox: {\n      backgroundColor: '#dbeafe',\n      width: '80px',\n      height: '160px'\n    },\n    meanBox: {\n      backgroundColor: '#fef9c3',\n      width: '48px',\n      height: '48px',\n      border: '2px solid #22c55e'\n    },\n    varBox: {\n      backgroundColor: '#fef08a',\n      width: '48px',\n      height: '48px',\n      border: '2px solid #22c55e'\n    },\n    samplingBox: {\n      backgroundColor: '#fef9c3',\n      width: '64px',\n      height: '64px',\n      border: '2px solid #22c55e'\n    },\n    contractingBox: {\n      backgroundColor: '#dcfce7',\n      width: '96px',\n      height: '112px',\n      border: '2px solid #6366f1'\n    },\n    deeperBox: {\n      backgroundColor: '#86efac',\n      width: '64px',\n      height: '80px',\n      border: '2px solid #6366f1'\n    },\n    bottleneckBox: {\n      backgroundColor: '#fef9c3',\n      width: '48px',\n      height: '48px'\n    },\n    expandingBox: {\n      backgroundColor: '#e9d5ff',\n      width: '64px',\n      height: '80px',\n      border: '2px solid #6366f1'\n    },\n    furtherBox: {\n      backgroundColor: '#f3e8ff',\n      width: '96px',\n      height: '112px',\n      border: '2px solid #6366f1'\n    },\n    arrow: {\n      margin: '0 8px',\n      fontSize: '20px',\n      fontWeight: 'bold',\n      color: '#6b7280'\n    },\n    downArrow: {\n      margin: '8px 0',\n      fontSize: '20px',\n      fontWeight: 'bold',\n      color: '#6b7280'\n    },\n    skipConnectionsLabel: {\n      backgroundColor: '#dbeafe',\n      padding: '8px 12px',\n      borderRadius: '8px',\n      border: '2px solid #3b82f6',\n      color: '#1d4ed8',\n      fontSize: '12px',\n      fontWeight: 'bold',\n      textAlign: 'center',\n      marginTop: '16px'\n    }\n  };\n\n  const renderAutoencoder = () => {\n    return (\n      <div style={styles.flowContainer}>\n        <div style={{...styles.box, ...styles.inputBox}}>Input</div>\n        <div style={styles.arrow}>→</div>\n        <div style={{...styles.box, ...styles.encoderBox}}>Encoder</div>\n        <div style={styles.arrow}>→</div>\n        <div style={{...styles.box, ...styles.latentBox}}>Latent Space</div>\n        <div style={styles.arrow}>→</div>\n        <div style={{...styles.box, ...styles.decoderBox}}>Decoder</div>\n        <div style={styles.arrow}>→</div>\n        <div style={{...styles.box, ...styles.outputBox}}>Output</div>\n      </div>\n    );\n  };\n\n  const renderVAE = () => {\n    return (\n      <div style={styles.architectureSimpleContainer}>\n        {/* First row: Input to Encoder */}\n        <div style={styles.flowContainer}>\n          <div style={{...styles.box, ...styles.inputBox}}>Input</div>\n          <div style={styles.arrow}>→</div>\n          <div style={{...styles.box, ...styles.encoderBox}}>Encoder</div>\n        </div>\n        \n        {/* Second row: Down arrow */}\n        <div style={styles.downArrow}>↓</div>\n        \n        {/* Third row: Mean and Variance */}\n        <div style={styles.flowContainer}>\n          <div style={{...styles.box, ...styles.meanBox}}>μ (Mean)</div>\n          <div style={{marginLeft: '16px', marginRight: '16px'}}></div>\n          <div style={{...styles.box, ...styles.varBox}}>σ² (Var)</div>\n        </div>\n        \n        {/* Fourth row: Curved arrow (rendered as text for simplicity) */}\n        <div style={{margin: '12px 0', fontSize: '20px', color: '#6b7280'}}>⟲</div>\n        \n        {/* Fifth row: Sampling */}\n        <div style={{...styles.box, ...styles.samplingBox, marginBottom: '16px'}}>Sampling</div>\n        \n        {/* Sixth row: Decoder to Output */}\n        <div style={styles.flowContainer}>\n          <div style={{...styles.box, ...styles.decoderBox}}>Decoder</div>\n          <div style={styles.arrow}>→</div>\n          <div style={{...styles.box, ...styles.outputBox}}>Output</div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderUNet = () => {\n    return (\n      <div style={styles.architectureSimpleContainer}>\n        {/* Top row: Input to Bottleneck */}\n        <div style={styles.flowContainer}>\n          <div style={{...styles.box, ...styles.inputBox}}>Input</div>\n          <div style={styles.arrow}>→</div>\n          <div style={{...styles.box, ...styles.contractingBox}}>Contracting Path</div>\n          <div style={styles.arrow}>→</div>\n          <div style={{...styles.box, ...styles.deeperBox}}>Deeper Contraction</div>\n          <div style={styles.arrow}>→</div>\n          <div style={{...styles.box, ...styles.bottleneckBox}}>Bottleneck</div>\n        </div>\n        \n        {/* Skip connections representation (simplified) */}\n        <div style={styles.skipConnectionsLabel}>Skip Connections (New in U-Net)</div>\n        \n        {/* Bottom row: Output back to before bottleneck */}\n        <div style={styles.flowContainer}>\n          <div style={{...styles.box, ...styles.outputBox}}>Output</div>\n          <div style={styles.arrow}>←</div>\n          <div style={{...styles.box, ...styles.furtherBox}}>Further Expansion</div>\n          <div style={styles.arrow}>←</div>\n          <div style={{...styles.box, ...styles.expandingBox}}>Expanding Path</div>\n          <div style={styles.arrow}>←</div>\n          <div style={{opacity: 0, width: '48px'}}></div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.heading}>Neural Network Architecture Comparison</h1>\n      \n      <div style={styles.compareContainer}>\n        <div style={styles.section}>\n          <h3 style={styles.sectionTitle}>Autoencoder (Base Architecture)</h3>\n          <div>{renderAutoencoder()}</div>\n          <p style={styles.description}>Basic autoencoder: Encodes input to a compressed representation, then decodes it back.</p>\n        </div>\n        \n        <div style={styles.section}>\n          <h3 style={styles.sectionTitle}>Variational Autoencoder (VAE)</h3>\n          <p style={styles.subtitle}>Modified by replacing the latent vector with a probabilistic distribution</p>\n          <div>{renderVAE()}</div>\n          <p style={styles.description}>Difference from autoencoder: Encodes to distribution parameters (mean & variance) instead of fixed vector, enables sampling for generation.</p>\n        </div>\n        \n        <div style={styles.section}>\n          <h3 style={styles.sectionTitle}>U-Net</h3>\n          <p style={styles.subtitle}>Modified by splitting encoder/decoder and adding skip connections</p>\n          <div>{renderUNet()}</div>\n          <p style={styles.description}>Difference from autoencoder: Splits encoder/decoder into multiple stages and adds skip connections to preserve spatial information.</p>\n        </div>\n      </div>\n      \n      <div style={styles.keyPoints}>\n        <h2 style={styles.keyPointsTitle}>Key Points:</h2>\n        <ul style={{paddingLeft: '20px'}}>\n          <li><span style={{fontWeight: '600'}}>Autoencoder</span>: Basic encoder-bottleneck-decoder structure</li>\n          <li><span style={{fontWeight: '600'}}>VAE</span>: Adds probabilistic sampling through mean and variance parameters</li>\n          <li><span style={{fontWeight: '600'}}>U-Net</span>: Adds skip connections between corresponding encoder and decoder layers</li>\n        </ul>\n        \n        <h2 style={styles.keyComponentsTitle}>Key Component Differences:</h2>\n        <div style={styles.detailsContainer}>\n          <h3 style={styles.componentTitle}>Latent Space vs Distribution vs Bottleneck</h3>\n          <div style={styles.termList}>\n            <div style={styles.term}>Latent Space (Autoencoder)</div>\n            <div style={styles.definition}>A fixed, deterministic compressed representation of the input. Each input maps to exactly one point in the latent space.</div>\n            \n            <div style={styles.term}>Mean & Variance (VAE)</div>\n            <div style={styles.definition}>Instead of encoding to a fixed vector, VAEs encode to parameters of a probability distribution (usually Gaussian). This creates a <em>distribution</em> over the latent space rather than a single point.</div>\n            \n            <div style={styles.term}>Sampling (VAE)</div>\n            <div style={styles.definition}>The VAE randomly samples from the probability distribution to generate a latent vector. This enables the generative capability: different samples give different outputs even for the same input.</div>\n            \n            <div style={styles.term}>Bottleneck (U-Net)</div>\n            <div style={styles.definition}>Similar to the latent space but usually preserves spatial structure. The bottleneck in U-Net is the most compressed representation but typically retains spatial dimensions, unlike the flattened vector in standard autoencoders.</div>\n          </div>\n          \n          <h3 style={styles.componentTitle}>Skip Connections (U-Net)</h3>\n          <p>Direct paths that allow information to flow from encoder to decoder layers at the same level. They help preserve fine spatial details that would otherwise be lost during compression, making U-Net excellent for tasks requiring precise localization (like image segmentation).</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NeuralNetworkVisualizer;\n","import React, { useState, useEffect, useRef } from 'react';\nimport * as math from 'mathjs';\nimport * as THREE from 'three';\n\nconst HessianEigenvalueVisualizer = () => {\n  // State for parameters\n  const [parameters, setParameters] = useState({\n    a: 1,\n    b: -1,\n    c: 0\n  });\n  \n  // State for visualization\n  const [selectedPoint, setSelectedPoint] = useState(null);\n  const [hessian, setHessian] = useState(null);\n  const [eigenvalues, setEigenvalues] = useState(null);\n  const [criticalPoints, setCriticalPoints] = useState([]);\n  \n  // State for camera controls\n  const [cameraDistance, setCameraDistance] = useState(4);\n  const [cameraRotation, setCameraRotation] = useState(0);\n  const [cameraHeight, setCameraHeight] = useState(3);\n  \n  // Three.js references\n  const containerRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const cameraRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  \n  // Saddle function definition\n  const functionExpression = '(a * x^2) - (b * y^2) + c';\n  const functionGradient = {\n    x: '2 * a * x',\n    y: '-2 * b * y'\n  };\n  const functionHessian = [\n    ['2 * a', '0'],\n    ['0', '-2 * b']\n  ];\n  \n  // Camera control handlers\n  const handleZoomIn = () => {\n    setCameraDistance(prev => Math.max(2, prev - 0.5));\n  };\n  \n  const handleZoomOut = () => {\n    setCameraDistance(prev => Math.min(8, prev + 0.5));\n  };\n  \n  const handleRotateLeft = () => {\n    setCameraRotation(prev => prev - 0.2);\n  };\n  \n  const handleRotateRight = () => {\n    setCameraRotation(prev => prev + 0.2);\n  };\n  \n  const handleMoveUp = () => {\n    setCameraHeight(prev => Math.min(6, prev + 0.5));\n  };\n  \n  const handleMoveDown = () => {\n    setCameraHeight(prev => Math.max(1, prev - 0.5));\n  };\n  \n  // Find critical points (where gradient is zero)\n  const findCriticalPoints = () => {\n    // For saddle function, critical point is at origin\n    const critPoint = { x: 0, y: 0, type: determinePointType([0, 0]) };\n    setCriticalPoints([critPoint]);\n    return [critPoint];\n  };\n  \n  // Determine the type of critical point based on eigenvalues\n  const determinePointType = (point) => {\n    const [x, y] = point;\n    const h = calculateHessian(x, y);\n    const eigs = calculateEigenvalues(h);\n    \n    if (eigs.every(val => val > 0)) {\n      return 'minimum';\n    } else if (eigs.every(val => val < 0)) {\n      return 'maximum';\n    } else {\n      return 'saddle';\n    }\n  };\n  \n  // Calculate Hessian matrix at a given point\n  const calculateHessian = (x, y) => {\n    const scope = {\n      x,\n      y,\n      ...parameters\n    };\n    \n    const hessianMatrix = functionHessian.map(row => \n      row.map(element => math.evaluate(element, scope))\n    );\n    \n    return hessianMatrix;\n  };\n  \n  // Calculate eigenvalues of a 2x2 matrix\n  const calculateEigenvalues = (matrix) => {\n    const a = matrix[0][0];\n    const b = matrix[0][1];\n    const c = matrix[1][0];\n    const d = matrix[1][1];\n    \n    const trace = a + d;\n    const determinant = a * d - b * c;\n    \n    const discriminant = Math.sqrt(trace * trace - 4 * determinant);\n    const eig1 = (trace + discriminant) / 2;\n    const eig2 = (trace - discriminant) / 2;\n    \n    return [eig1, eig2];\n  };\n  \n  // Calculate eigenvectors of a 2x2 matrix\n  const calculateEigenvectors = (matrix, eigenvalues) => {\n    const eigenvectors = [];\n    \n    for (let i = 0; i < eigenvalues.length; i++) {\n      const lambda = eigenvalues[i];\n      \n      const a = matrix[0][0];\n      const b = matrix[0][1];\n      const c = matrix[1][0];\n      const d = matrix[1][1];\n      \n      let eigenvector;\n      \n      if (Math.abs(b) > 1e-10) {\n        eigenvector = [b, lambda - a];\n      } else if (Math.abs(c) > 1e-10) {\n        eigenvector = [lambda - d, c];\n      } else {\n        eigenvector = i === 0 ? [1, 0] : [0, 1];\n      }\n      \n      // Normalize the eigenvector\n      const length = Math.sqrt(eigenvector[0]*eigenvector[0] + eigenvector[1]*eigenvector[1]);\n      eigenvector = [eigenvector[0]/length, eigenvector[1]/length];\n      \n      eigenvectors.push(eigenvector);\n    }\n    \n    return eigenvectors;\n  };\n  \n  // Handle point selection\n  const handlePointSelect = (point) => {\n    setSelectedPoint(point);\n    \n    const h = calculateHessian(point.x, point.y);\n    setHessian(h);\n    \n    const eigs = calculateEigenvalues(h);\n    setEigenvalues(eigs);\n  };\n  \n  // Helper function to create text labels for eigenvalues\n  const createTextLabel = (text, x, y, z, color) => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    canvas.width = 100;\n    canvas.height = 50;\n    \n    context.fillStyle = '#ffffff';\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    context.font = '24px Arial';\n    context.fillStyle = `#${color.toString(16).padStart(6, '0')}`;\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    context.fillText(text, canvas.width / 2, canvas.height / 2);\n    \n    const texture = new THREE.Texture(canvas);\n    texture.needsUpdate = true;\n    \n    const spriteMaterial = new THREE.SpriteMaterial({ map: texture });\n    const sprite = new THREE.Sprite(spriteMaterial);\n    sprite.position.set(x, y, z);\n    sprite.scale.set(0.8, 0.4, 1);\n    \n    return sprite;\n  };\n  \n  // Create function surface\n  const createFunctionSurface = () => {\n    if (!sceneRef.current) return;\n    \n    // Remove existing surface if any\n    const existingSurface = sceneRef.current.getObjectByName('functionSurface');\n    if (existingSurface) {\n      sceneRef.current.remove(existingSurface);\n    }\n    \n    // Clean up any previous critical point objects\n    const objects = sceneRef.current.children.slice();\n    for (let i = 0; i < objects.length; i++) {\n      const obj = objects[i];\n      if (obj.userData && obj.userData.isCriticalPoint) {\n        sceneRef.current.remove(obj);\n      }\n    }\n    \n    // Create new surface\n    const resolution = 40;\n    const size = 4; // -2 to 2\n    \n    const geometry = new THREE.BufferGeometry();\n    const positions = [];\n    const colors = [];\n    const indices = [];\n    \n    // Generate surface points\n    let minZ = Infinity;\n    let maxZ = -Infinity;\n    \n    // First pass: calculate min/max Z for color scaling\n    for (let i = 0; i <= resolution; i++) {\n      for (let j = 0; j <= resolution; j++) {\n        const x = (i / resolution) * size - size / 2;\n        const y = (j / resolution) * size - size / 2;\n        \n        const scope = { x, y, ...parameters };\n        const z = math.evaluate(functionExpression, scope);\n        \n        minZ = Math.min(minZ, z);\n        maxZ = Math.max(maxZ, z);\n      }\n    }\n    \n    // Second pass: create vertices and colors\n    for (let i = 0; i <= resolution; i++) {\n      for (let j = 0; j <= resolution; j++) {\n        const x = (i / resolution) * size - size / 2;\n        const y = (j / resolution) * size - size / 2;\n        \n        const scope = { x, y, ...parameters };\n        const z = math.evaluate(functionExpression, scope);\n        \n        // Add position\n        positions.push(x, z, y); // Note: in Three.js, y is up\n        \n        // Add color based on height\n        const t = (z - minZ) / (maxZ - minZ || 1);\n        const r = t; // Red increases with height\n        const g = 0.2; // Fixed green\n        const b = 1 - t; // Blue decreases with height\n        \n        colors.push(r, g, b);\n        \n        // Add indices for triangles\n        if (i < resolution && j < resolution) {\n          const a = i * (resolution + 1) + j;\n          const b = i * (resolution + 1) + (j + 1);\n          const c = (i + 1) * (resolution + 1) + j;\n          const d = (i + 1) * (resolution + 1) + (j + 1);\n          \n          // Triangle 1\n          indices.push(a, b, c);\n          \n          // Triangle 2\n          indices.push(c, b, d);\n        }\n      }\n    }\n    \n    // Set attributes\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\n    geometry.setAttribute('color', new THREE.Float32BufferAttribute(colors, 3));\n    geometry.setIndex(indices);\n    \n    // Calculate normals for proper lighting\n    geometry.computeVertexNormals();\n    \n    // Create material\n    const material = new THREE.MeshPhongMaterial({\n      vertexColors: true,\n      side: THREE.DoubleSide,\n      shininess: 30\n    });\n    \n    // Create mesh\n    const mesh = new THREE.Mesh(geometry, material);\n    mesh.name = 'functionSurface';\n    \n    // Add critical points with Hessian direction indicators\n    const critPoints = findCriticalPoints();\n    critPoints.forEach(point => {\n      const scope = { x: point.x, y: point.y, ...parameters };\n      const z = math.evaluate(functionExpression, scope);\n      \n      // Choose color based on point type\n      let color;\n      if (point.type === 'minimum') color = 0x00ff00; // Green\n      else if (point.type === 'maximum') color = 0xff0000; // Red\n      else color = 0xffff00; // Yellow (saddle)\n      \n      // Create sphere for critical point\n      const sphereGeometry = new THREE.SphereGeometry(0.2, 16, 16);\n      const sphereMaterial = new THREE.MeshPhongMaterial({ color });\n      const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\n      \n      // Position sphere\n      sphere.position.set(point.x, z, point.y);\n      \n      // Mark as critical point for cleanup\n      sphere.userData = { \n        isCriticalPoint: true,\n        point: { x: point.x, y: point.y, z, type: point.type } \n      };\n      \n      // Add sphere to scene directly for raycasting\n      sceneRef.current.add(sphere);\n      \n      // Calculate Hessian and eigenvalues for this point\n      const hessian = calculateHessian(point.x, point.y);\n      const eigenvalues = calculateEigenvalues(hessian);\n      \n      // Calculate eigenvectors (for 2x2 matrix)\n      const eigenvectors = calculateEigenvectors(hessian, eigenvalues);\n      \n      // Add arrow indicators for eigenvectors/Hessian directions\n      for (let i = 0; i < eigenvectors.length; i++) {\n        const eigenvector = eigenvectors[i];\n        const eigenvalue = eigenvalues[i];\n        \n        // Normalize and scale eigenvector\n        const length = Math.sqrt(eigenvector[0]*eigenvector[0] + eigenvector[1]*eigenvector[1]);\n        const normalizedVector = [eigenvector[0]/length, eigenvector[1]/length];\n        \n        // Scale factor for arrows - make them much larger\n        const scale = 1.5;\n        \n        // Direction determines arrow color - use blue/orange to distinguish from critical point colors\n        // Using more saturated colors for better visibility\n        const arrowColor = eigenvalue > 0 ? 0x00aaff : 0xff9900;\n        \n        // Create arrow in 3D space (x,z,y coordinates in Three.js) - make arrows thicker\n        const arrowHelper = new THREE.ArrowHelper(\n          new THREE.Vector3(normalizedVector[0], 0, normalizedVector[1]),\n          new THREE.Vector3(point.x, z + 0.2, point.y), // Start slightly above the surface\n          scale,\n          arrowColor,\n          0.5, // Head length - much larger\n          0.25  // Head width - much larger\n        );\n        \n        // Add a label for the eigenvalue\n        const arrowLabel = createTextLabel(\n          eigenvalue.toFixed(2),\n          point.x + normalizedVector[0] * (scale + 0.2),\n          z + 0.4,\n          point.y + normalizedVector[1] * (scale + 0.2),\n          arrowColor\n        );\n        \n        // Mark as critical point components for cleanup\n        arrowHelper.userData = { isCriticalPoint: true };\n        arrowLabel.userData = { isCriticalPoint: true };\n        \n        // Add arrows to scene directly\n        sceneRef.current.add(arrowHelper);\n        sceneRef.current.add(arrowLabel);\n      }\n    });\n    \n    // Add to scene\n    sceneRef.current.add(mesh);\n  };\n  \n  // Initialize and clean up Three.js\n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    // Initialize scene\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf0f0f0);\n    sceneRef.current = scene;\n    \n    // Initialize camera\n    const width = containerRef.current.clientWidth;\n    const height = containerRef.current.clientHeight;\n    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    cameraRef.current = camera;\n    \n    // Update camera based on state\n    const updateCamera = () => {\n      if (!cameraRef.current) return;\n      \n      cameraRef.current.position.x = Math.sin(cameraRotation) * cameraDistance;\n      cameraRef.current.position.z = Math.cos(cameraRotation) * cameraDistance;\n      cameraRef.current.position.y = cameraHeight;\n      cameraRef.current.lookAt(0, 0, 0);\n    };\n    \n    updateCamera();\n    \n    // Initialize renderer\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    rendererRef.current = renderer;\n    \n    // Clear container\n    while (containerRef.current.firstChild) {\n      containerRef.current.removeChild(containerRef.current.firstChild);\n    }\n    containerRef.current.appendChild(renderer.domElement);\n    \n    // Add lighting\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\n    scene.add(ambientLight);\n    \n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight.position.set(1, 1, 1);\n    scene.add(directionalLight);\n    \n    // Add coordinate axes for reference\n    const axesHelper = new THREE.AxesHelper(2);\n    scene.add(axesHelper);\n    \n    // Add axis labels\n    const addAxisLabel = (text, position, color) => {\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      canvas.width = 64;\n      canvas.height = 32;\n      \n      context.fillStyle = '#ffffff';\n      context.fillRect(0, 0, canvas.width, canvas.height);\n      context.font = 'bold 24px Arial';\n      context.fillStyle = color;\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.fillText(text, canvas.width / 2, canvas.height / 2);\n      \n      const texture = new THREE.Texture(canvas);\n      texture.needsUpdate = true;\n      \n      const spriteMaterial = new THREE.SpriteMaterial({ map: texture });\n      const sprite = new THREE.Sprite(spriteMaterial);\n      sprite.position.set(...position);\n      sprite.scale.set(0.5, 0.25, 1);\n      \n      scene.add(sprite);\n    };\n    \n    // Add axis labels\n    addAxisLabel('X', [2.2, 0, 0], '#ff0000');\n    addAxisLabel('Y', [0, 0, 2.2], '#0000ff');\n    addAxisLabel('Z', [0, 2.2, 0], '#00aa00');\n    \n    // Create and add surface\n    createFunctionSurface();\n    \n    // Animation loop\n    const animate = () => {\n      if (!rendererRef.current || !sceneRef.current || !cameraRef.current) return;\n      \n      animationFrameRef.current = requestAnimationFrame(animate);\n      updateCamera();\n      renderer.render(scene, camera);\n    };\n    \n    animate();\n    \n    // Handle window resize\n    const handleResize = () => {\n      if (!containerRef.current || !rendererRef.current || !cameraRef.current) return;\n      \n      const width = containerRef.current.clientWidth;\n      const height = containerRef.current.clientHeight;\n      \n      cameraRef.current.aspect = width / height;\n      cameraRef.current.updateProjectionMatrix();\n      \n      rendererRef.current.setSize(width, height);\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      \n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      \n      if (rendererRef.current) {\n        rendererRef.current.dispose();\n      }\n      \n      // Clear container\n      if (containerRef.current) {\n        while (containerRef.current.firstChild) {\n          containerRef.current.removeChild(containerRef.current.firstChild);\n        }\n      }\n    };\n  }, [cameraDistance, cameraRotation, cameraHeight]);\n  \n  // Update function visualization when parameters change\n  useEffect(() => {\n    if (sceneRef.current) {\n      createFunctionSurface();\n    }\n  }, [parameters]);\n  \n  return (\n    <div className=\"p-4 max-w-4xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">Hessian Matrix & Eigenvalue Visualization</h1>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div className=\"md:col-span-2 bg-gray-100 p-4 rounded-lg\">\n          <h2 className=\"text-lg font-semibold mb-2\">3D Saddle Function Visualization</h2>\n          <div className=\"mb-4 text-sm\">\n            <p>Function: f(x, y) = {functionExpression.replace(/\\*/g, '·')}</p>\n            <p className=\"mt-2\">\n              <span className=\"font-medium\">Critical Points:</span>\n              <span className=\"ml-2 p-1 bg-green-500 text-white rounded\">Minimum</span>\n              <span className=\"ml-2 p-1 bg-red-500 text-white rounded\">Maximum</span>\n              <span className=\"ml-2 p-1 bg-yellow-500 text-white rounded\">Saddle</span>\n            </p>\n            <p className=\"mt-1\">\n              <span className=\"font-medium\">Arrows:</span>\n              <span className=\"ml-2 p-1 bg-blue-500 text-white rounded\">Positive eigenvalue</span>\n              <span className=\"ml-2 p-1 bg-orange-500 text-white rounded\">Negative eigenvalue</span>\n            </p>\n          </div>\n          \n          <div className=\"flex justify-center space-x-4 mb-4\">\n            <div className=\"flex flex-col items-center\">\n              <span className=\"text-sm font-medium mb-1\">Zoom</span>\n              <div className=\"flex flex-col space-y-2\">\n                <button \n                  className=\"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\n                  onClick={handleZoomIn}\n                >\n                  Zoom In\n                </button>\n                <button \n                  className=\"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\n                  onClick={handleZoomOut}\n                >\n                  Zoom Out\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"flex flex-col items-center\">\n              <span className=\"text-sm font-medium mb-1\">Rotate</span>\n              <div className=\"flex flex-col space-y-2\">\n                <div className=\"flex space-x-2\">\n                  <button \n                    className=\"px-3 py-1 bg-green-500 text-white rounded hover:bg-green-600\"\n                    onClick={handleRotateLeft}\n                  >\n                    ←\n                  </button>\n                  <button \n                    className=\"px-3 py-1 bg-green-500 text-white rounded hover:bg-green-600\"\n                    onClick={handleRotateRight}\n                  >\n                    →\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex flex-col items-center\">\n              <span className=\"text-sm font-medium mb-1\">Height</span>\n              <div className=\"flex flex-col space-y-2\">\n                <button \n                  className=\"px-3 py-1 bg-purple-500 text-white rounded hover:bg-purple-600\"\n                  onClick={handleMoveUp}\n                >\n                  Up\n                </button>\n                <button \n                  className=\"px-3 py-1 bg-purple-500 text-white rounded hover:bg-purple-600\"\n                  onClick={handleMoveDown}\n                >\n                  Down\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          <div \n            ref={containerRef} \n            className=\"w-full h-64 md:h-96 border border-gray-300\"\n            style={{ minHeight: \"300px\" }}\n          ></div>\n        </div>\n        \n        <div className=\"bg-gray-100 p-4 rounded-lg\">\n          <h2 className=\"text-lg font-semibold mb-2\">Parameters</h2>\n          \n          <div className=\"mt-4 p-3 border border-blue-300 rounded-lg\">\n            <h3 className=\"font-medium mb-2 text-center\">Fine-Tuning Controls</h3>\n            \n            <div className=\"mb-3\">\n              <div className=\"flex justify-between items-center\">\n                <label className=\"text-sm font-medium\">Parameter a:</label>\n                <input\n                  type=\"number\"\n                  min=\"-5\"\n                  max=\"5\"\n                  step=\"0.1\"\n                  value={parameters.a}\n                  onChange={(e) => setParameters({...parameters, a: parseFloat(e.target.value)})}\n                  className=\"w-20 p-1 border rounded text-right\"\n                />\n              </div>\n              <input\n                type=\"range\"\n                min=\"-5\"\n                max=\"5\"\n                step=\"0.1\"\n                value={parameters.a}\n                onChange={(e) => setParameters({...parameters, a: parseFloat(e.target.value)})}\n                className=\"w-full mt-1\"\n              />\n              <p className=\"text-xs mt-1 text-gray-600\">Controls curvature in x-direction. Positive values create upward curvature.</p>\n            </div>\n            \n            <div className=\"mb-3\">\n              <div className=\"flex justify-between items-center\">\n                <label className=\"text-sm font-medium\">Parameter b:</label>\n                <input\n                  type=\"number\"\n                  min=\"-5\"\n                  max=\"5\"\n                  step=\"0.1\"\n                  value={parameters.b}\n                  onChange={(e) => setParameters({...parameters, b: parseFloat(e.target.value)})}\n                  className=\"w-20 p-1 border rounded text-right\"\n                />\n              </div>\n              <input\n                type=\"range\"\n                min=\"-5\"\n                max=\"5\"\n                step=\"0.1\"\n                value={parameters.b}\n                onChange={(e) => setParameters({...parameters, b: parseFloat(e.target.value)})}\n                className=\"w-full mt-1\"\n              />\n              <p className=\"text-xs mt-1 text-gray-600\">Controls curvature in y-direction. Negative values create downward curvature.</p>\n            </div>\n            \n            <div className=\"mb-3\">\n              <div className=\"flex justify-between items-center\">\n                <label className=\"text-sm font-medium\">Parameter c:</label>\n                <input\n                  type=\"number\"\n                  min=\"-5\"\n                  max=\"5\"\n                  step=\"0.1\"\n                  value={parameters.c}\n                  onChange={(e) => setParameters({...parameters, c: parseFloat(e.target.value)})}\n                  className=\"w-20 p-1 border rounded text-right\"\n                />\n              </div>\n              <input\n                type=\"range\"\n                min=\"-5\"\n                max=\"5\"\n                step=\"0.1\"\n                value={parameters.c}\n                onChange={(e) => setParameters({...parameters, c: parseFloat(e.target.value)})}\n                className=\"w-full mt-1\"\n              />\n              <p className=\"text-xs mt-1 text-gray-600\">Vertical shift of the function (constant term).</p>\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-2 mt-4\">\n              <button\n                className=\"p-2 bg-indigo-500 text-white rounded hover:bg-indigo-600\"\n                onClick={() => setParameters({ a: 1, b: -1, c: 0 })}\n              >\n                Perfect Saddle\n              </button>\n              <button\n                className=\"p-2 bg-indigo-500 text-white rounded hover:bg-indigo-600\"\n                onClick={() => setParameters({ a: 2, b: -0.5, c: 0 })}\n              >\n                Stretched Saddle\n              </button>\n              <button\n                className=\"p-2 bg-indigo-500 text-white rounded hover:bg-indigo-600\"\n                onClick={() => setParameters({ a: 1, b: 1, c: 0 })}\n              >\n                Bowl (Minimum)\n              </button>\n              <button\n                className=\"p-2 bg-indigo-500 text-white rounded hover:bg-indigo-600\"\n                onClick={() => setParameters({ a: -1, b: -1, c: 0 })}\n              >\n                Hill (Maximum)\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\n            <h3 className=\"font-medium mb-2\">Hessian & Eigenvalues: Physical Meaning</h3>\n            <p className=\"text-sm mb-2\">\n              The <strong>Hessian matrix</strong> contains the second-order partial derivatives that measure the function's curvature in different directions.\n            </p>\n            <p className=\"text-sm mb-2\">\n              <strong>Eigenvalues</strong> represent the principal curvatures of the function at a point, regardless of coordinate system:\n            </p>\n            <ul className=\"text-sm list-disc pl-5 space-y-1 mb-2\">\n              <li><span className=\"text-blue-600 font-medium\">Positive eigenvalue</span>: Upward curvature (valley/bowl shape)</li>\n              <li><span className=\"text-orange-600 font-medium\">Negative eigenvalue</span>: Downward curvature (hill/dome shape)</li>\n              <li><span className=\"text-gray-600 font-medium\">Zero eigenvalue</span>: Flat direction (no curvature)</li>\n            </ul>\n            <p className=\"text-sm\">\n              At a <strong>saddle point</strong>, eigenvalues have opposite signs, creating a surface that curves upward in some directions and downward in others - like a saddle or mountain pass.\n            </p>\n          </div>\n        </div>\n      </div>\n      \n      {selectedPoint && (\n        <div className=\"mt-4 bg-gray-100 p-4 rounded-lg\">\n          <h2 className=\"text-lg font-semibold mb-2\">Point Analysis</h2>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <h3 className=\"text-md font-medium mb-1\">Selected Point:</h3>\n              <p>x: {selectedPoint.x.toFixed(2)}, y: {selectedPoint.y.toFixed(2)}, z: {selectedPoint.z.toFixed(2)}</p>\n            </div>\n            \n            {hessian && (\n              <div>\n                <h3 className=\"text-md font-medium mb-1\">Hessian Matrix:</h3>\n                <div className=\"flex justify-center items-center\">\n                  <div className=\"border-2 border-gray-400 px-4 py-2\">\n                    <div className=\"flex\">\n                      <div className=\"w-16 text-center\">{hessian[0][0].toFixed(2)}</div>\n                      <div className=\"w-16 text-center\">{hessian[0][1].toFixed(2)}</div>\n                    </div>\n                    <div className=\"flex\">\n                      <div className=\"w-16 text-center\">{hessian[1][0].toFixed(2)}</div>\n                      <div className=\"w-16 text-center\">{hessian[1][1].toFixed(2)}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            {eigenvalues && (\n              <div>\n                <h3 className=\"text-md font-medium mb-1\">Eigenvalues:</h3>\n                <p>λ₁: {eigenvalues[0].toFixed(2)}, λ₂: {eigenvalues[1].toFixed(2)}</p>\n                \n                <h3 className=\"text-md font-medium mt-2 mb-1\">Critical Point Type:</h3>\n                {eigenvalues[0] > 0 && eigenvalues[1] > 0 && (\n                  <p className=\"text-green-600 font-medium\">Minimum (Both eigenvalues positive)</p>\n                )}\n                {eigenvalues[0] < 0 && eigenvalues[1] < 0 && (\n                  <p className=\"text-red-600 font-medium\">Maximum (Both eigenvalues negative)</p>\n                )}\n                {eigenvalues[0] * eigenvalues[1] < 0 && (\n                  <p className=\"text-yellow-600 font-medium\">Saddle Point (Eigenvalues have opposite signs)</p>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      \n      <div className=\"mt-4 bg-gray-100 p-4 rounded-lg\">\n        <h2 className=\"text-lg font-semibold mb-2\">Understanding the Visualization</h2>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div className=\"bg-white p-3 rounded-lg shadow-sm\">\n            <div className=\"mb-2 text-center font-medium text-blue-600\">Positive Eigenvalue</div>\n            <div className=\"bg-blue-50 h-24 rounded-lg flex items-center justify-center mb-2\">\n              <svg width=\"100\" height=\"80\" viewBox=\"0 0 100 80\">\n                <path d=\"M 10 40 Q 50 70 90 40\" stroke=\"#0088ff\" fill=\"none\" strokeWidth=\"3\" />\n                <text x=\"35\" y=\"25\" fill=\"#0088ff\" fontSize=\"12\">Upward curve</text>\n              </svg>\n            </div>\n            <p className=\"text-sm\">The function curves <strong>upward</strong> in this direction (shown by blue arrows), creating a valley-like shape where the function increases as you move away from the critical point.</p>\n          </div>\n          \n          <div className=\"bg-white p-3 rounded-lg shadow-sm\">\n            <div className=\"mb-2 text-center font-medium text-orange-600\">Negative Eigenvalue</div>\n            <div className=\"bg-orange-50 h-24 rounded-lg flex items-center justify-center mb-2\">\n              <svg width=\"100\" height=\"80\" viewBox=\"0 0 100 80\">\n                <path d=\"M 10 40 Q 50 10 90 40\" stroke=\"#ff8800\" fill=\"none\" strokeWidth=\"3\" />\n                <text x=\"35\" y=\"55\" fill=\"#ff8800\" fontSize=\"12\">Downward curve</text>\n              </svg>\n            </div>\n            <p className=\"text-sm\">The function curves <strong>downward</strong> in this direction (shown by orange arrows), creating a hill-like shape where the function decreases as you move away from the critical point.</p>\n          </div>\n          \n          <div className=\"bg-white p-3 rounded-lg shadow-sm\">\n            <div className=\"mb-2 text-center font-medium text-yellow-600\">Saddle Point</div>\n            <div className=\"bg-yellow-50 h-24 rounded-lg flex items-center justify-center mb-2\">\n              <svg width=\"100\" height=\"80\" viewBox=\"0 0 100 80\">\n                <path d=\"M 10 40 Q 50 10 90 40\" stroke=\"#ff8800\" fill=\"none\" strokeWidth=\"3\" transform=\"rotate(90 50 40)\" />\n                <path d=\"M 10 40 Q 50 70 90 40\" stroke=\"#0088ff\" fill=\"none\" strokeWidth=\"3\" />\n                <circle cx=\"50\" cy=\"40\" r=\"4\" fill=\"#ffcc00\" />\n              </svg>\n            </div>\n            <p className=\"text-sm\">A saddle point occurs when the Hessian has <strong>eigenvalues with opposite signs</strong> - the function curves upward in some directions and downward in others, creating a saddle-like shape.</p>\n          </div>\n        </div>\n        \n        <div className=\"mt-4 bg-purple-50 p-3 rounded-lg\">\n          <h3 className=\"text-md font-medium mb-1\">The Hessian Matrix in a Nutshell</h3>\n          <p>The Hessian matrix at a point contains the second derivatives that describe how the function <strong>curves</strong> in different directions. The eigenvalues of this matrix determine whether a critical point is a minimum, maximum, or saddle point, regardless of which coordinate system we use.</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HessianEigenvalueVisualizer;\n","import React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine } from 'recharts';\n\nconst SCHEDULE_COLORS = {\n  constant: \"#3b82f6\",\n  step: \"#ef4444\",\n  onecycle: \"#10b981\",\n  cosine: \"#8b5cf6\",\n};\n\nconst SimpleTooltip = ({ active, payload }) => {\n  if (!active || !payload || !payload.length) return null;\n  \n  const point = payload[0].payload;\n  return (\n    <div style={{backgroundColor: \"white\", padding: \"8px\", border: \"1px solid #ddd\", borderRadius: \"4px\", fontSize: \"12px\"}}>\n      <p><strong>Step:</strong> {point.step}</p>\n      {payload.map(entry => (\n        <p key={entry.dataKey}>\n          <strong>{entry.name || entry.dataKey}:</strong> {typeof entry.value === 'number' ? entry.value.toExponential(4) : entry.value}\n        </p>\n      ))}\n    </div>\n  );\n};\n\nconst LRScheduleVisualizer = () => {\n  const [totalEpochs, setTotalEpochs] = useState(4);\n  const [maxLR, setMaxLR] = useState(0.002);\n  const [initialLR, setInitialLR] = useState(0.0001);\n  const [warmupPct, setWarmupPct] = useState(0.2);\n  const [activeSchedules, setActiveSchedules] = useState(['constant', 'step', 'onecycle', 'cosine']);\n  \n  const datasetSize = 10000;\n  const batchSize = 32;\n  const batchesPerEpoch = Math.ceil(datasetSize / batchSize);\n  const totalSteps = batchesPerEpoch * totalEpochs;\n  \n  const [lrData, setLrData] = useState([]);\n  const [lossData, setLossData] = useState([]);\n  const [chartWidth, setChartWidth] = useState(600);\n  const [chartHeight, setChartHeight] = useState(300);\n  \n  const initialLoss = 5.0;\n  const optimalLoss = 0.5;\n  const noiseLevel = 0.05;\n\n  useEffect(() => {\n    const handleResize = () => {\n      const containerWidth = Math.min(\n        document.getElementById('chart-container')?.clientWidth || 600,\n        window.innerWidth - 40\n      );\n      setChartWidth(containerWidth);\n      setChartHeight(Math.max(300, Math.min(400, window.innerHeight * 0.5)));\n    };\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    \n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const toggleSchedule = (schedule) => {\n    if (activeSchedules.includes(schedule)) {\n      setActiveSchedules(activeSchedules.filter(s => s !== schedule));\n    } else {\n      setActiveSchedules([...activeSchedules, schedule]);\n    }\n  };\n  \n  useEffect(() => {\n    const newLRData = [];\n    const warmupSteps = Math.floor(totalSteps * warmupPct);\n    \n    for (let step = 0; step <= totalSteps; step += Math.max(1, Math.floor(totalSteps / 100))) {\n      const point = { step };\n      \n      point.constant = maxLR;\n      point.step_decay = null;\n      \n      if (step < warmupSteps) {\n        point.step_decay = initialLR + (maxLR - initialLR) * (step / warmupSteps);\n      } else {\n        const decay1 = warmupSteps + Math.floor((totalSteps - warmupSteps) / 3);\n        const decay2 = warmupSteps + Math.floor((totalSteps - warmupSteps) * 2 / 3);\n        \n        if (step < decay1) {\n          point.step_decay = maxLR;\n        } else if (step < decay2) {\n          point.step_decay = maxLR * 0.1;\n        } else {\n          point.step_decay = maxLR * 0.01;\n        }\n      }\n      \n      if (step < warmupSteps) {\n        point.onecycle = initialLR + (maxLR - initialLR) * (step / warmupSteps);\n      } else {\n        const decaySteps = step - warmupSteps;\n        const totalDecaySteps = totalSteps - warmupSteps;\n        const cosineValue = 0.5 * (1 + Math.cos(Math.PI * decaySteps / totalDecaySteps));\n        point.onecycle = initialLR + (maxLR - initialLR) * cosineValue;\n      }\n      \n      if (step < warmupSteps) {\n        point.cosine = initialLR + (maxLR - initialLR) * (step / warmupSteps);\n      } else {\n        const decaySteps = step - warmupSteps;\n        const totalDecaySteps = totalSteps - warmupSteps;\n        point.cosine = maxLR * 0.5 * (1 + Math.cos(Math.PI * decaySteps / totalDecaySteps));\n      }\n      \n      newLRData.push(point);\n    }\n  \n    setLrData(newLRData);\n  }, [totalEpochs, totalSteps, maxLR, initialLR, warmupPct]);\n\n  useEffect(() => {\n    if (lrData.length === 0) return;\n\n    const newLossData = [];\n\n    for (let step = 0; step <= totalSteps; step += Math.max(1, Math.floor(totalSteps / 100))) {\n      const lrPoint = lrData.reduce((prev, curr) => \n        Math.abs(curr.step - step) < Math.abs(prev.step - step) ? curr : prev\n      , lrData[0]);\n      \n      const point = { step };\n      \n      // Initialize loss values for all schedules to ensure they're included in data\n      activeSchedules.forEach(schedule => {\n        if (schedule === 'constant') point.constant_loss = null;\n        else if (schedule === 'step') point.step_loss = null;\n        else if (schedule === 'onecycle') point.onecycle_loss = null;\n        else if (schedule === 'cosine') point.cosine_loss = null;\n      });\n      \n      // Calculate actual loss values\n      activeSchedules.forEach(schedule => {\n        const lr = schedule === 'step' ? lrPoint.step_decay : lrPoint[schedule];\n        if (lr === undefined || lr === null) return;\n        \n        const warmupSteps = Math.floor(totalSteps * warmupPct);\n        const decay1 = warmupSteps + Math.floor((totalSteps - warmupSteps) / 3);\n        const decay2 = warmupSteps + Math.floor((totalSteps - warmupSteps) * 2 / 3);\n        \n        if (schedule === 'constant') {\n          const initialProgress = Math.min(1, step / (totalSteps * 0.2));\n          const oscillationPhase = Math.max(0, Math.min(1, (step - totalSteps * 0.2) / (totalSteps * 0.5)));\n          const oscillation = Math.sin(step / 7) * 0.3 * oscillationPhase;\n          const finalPhase = Math.max(0, step - totalSteps * 0.7) / (totalSteps * 0.3);\n          const finalImprovement = finalPhase * 0.3;\n          \n          point.constant_loss = initialLoss * Math.exp(-initialProgress * 4) + \n                                optimalLoss * 1.5 + \n                                oscillation - \n                                finalImprovement;\n        }\n        \n        else if (schedule === 'step') {\n          let progress = 0;\n          let plateauNoise = 0;\n          \n          if (step < warmupSteps) {\n            progress = step / warmupSteps * 0.4;\n            plateauNoise = 0.05 * Math.sin(step / 5);\n          } else if (step < decay1) {\n            progress = 0.4 + (step - warmupSteps) / (decay1 - warmupSteps) * 0.1;\n            plateauNoise = 0.05 * Math.sin(step / 5);\n          } else if (step < decay1 + 10) {\n            const dropProgress = (step - decay1) / 10;\n            progress = 0.5 + dropProgress * 0.15;\n          } else if (step < decay2) {\n            progress = 0.65 + (step - (decay1 + 10)) / (decay2 - (decay1 + 10)) * 0.05;\n            plateauNoise = 0.03 * Math.sin(step / 5);\n          } else if (step < decay2 + 10) {\n            const dropProgress = (step - decay2) / 10;\n            progress = 0.7 + dropProgress * 0.1;\n          } else {\n            progress = 0.8 + (step - (decay2 + 10)) / (totalSteps - (decay2 + 10)) * 0.1;\n            plateauNoise = 0.02 * Math.sin(step / 5);\n          }\n          \n          point.step_loss = initialLoss * Math.exp(-progress * 3.5) + \n                            optimalLoss * 1.1 + \n                            plateauNoise;\n        }\n        \n        else if (schedule === 'onecycle') {\n          let progress = 0;\n          let noise = 0;\n          \n          if (step < warmupSteps) {\n            progress = (step / warmupSteps) * 0.4;\n            noise = 0.08 * Math.random() * Math.exp(-step / warmupSteps);\n          } else if (step < totalSteps * 0.6) {\n            const exploreProgress = (step - warmupSteps) / (totalSteps * 0.6 - warmupSteps);\n            progress = 0.4 + exploreProgress * 0.3;\n            noise = 0.05 * Math.random() * (1 - exploreProgress);\n          } else {\n            const finetuneProgress = (step - totalSteps * 0.6) / (totalSteps * 0.4);\n            progress = 0.7 + finetuneProgress * 0.2;\n            noise = 0.01 * Math.random();\n          }\n          \n          point.onecycle_loss = initialLoss * Math.exp(-progress * 3.8) + \n                                optimalLoss * 1.05 + \n                                noise;\n        }\n        \n        else if (schedule === 'cosine') {\n          let progress = 0;\n          let noise = 0;\n          \n          if (step < warmupSteps) {\n            progress = (step / warmupSteps) * 0.35;\n            noise = 0.07 * Math.random();\n          } else {\n            const postWarmupProgress = (step - warmupSteps) / (totalSteps - warmupSteps);\n            const cosineEffect = Math.cos(Math.PI * postWarmupProgress / 2);\n            progress = 0.35 + (1 - cosineEffect) * 0.6;\n            noise = 0.04 * Math.random() * cosineEffect;\n          }\n          \n          point.cosine_loss = initialLoss * Math.exp(-progress * 3.8) + \n                              optimalLoss * 0.9 + \n                              noise;\n        }\n      });\n      \n      // Add random noise to all losses\n      Object.keys(point).forEach(key => {\n        if (key.includes('loss') && point[key] !== null) {\n          const noise = (Math.random() - 0.5) * noiseLevel;\n          point[key] += noise;\n        }\n      });\n      \n      newLossData.push(point);\n    }\n    \n    console.log(\"Generated loss data:\", newLossData.slice(0, 3));\n    setLossData(newLossData);\n  }, [lrData, activeSchedules, totalSteps, warmupPct, initialLoss, optimalLoss, noiseLevel]);\n\n  return (\n    <div style={{padding: \"16px\", width: \"100%\", maxWidth: \"900px\", margin: \"0 auto\", backgroundColor: \"#f9fafb\", borderRadius: \"8px\", boxShadow: \"0 1px 3px rgba(0,0,0,0.12)\"}}>\n      <h1 style={{fontSize: \"1.25rem\", fontWeight: \"bold\", marginBottom: \"16px\", textAlign: \"center\"}}>Learning Rate and Loss Visualizer</h1>\n      \n      <div style={{display: \"grid\", gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\", gap: \"16px\", marginBottom: \"16px\"}}>\n        <div>\n          <label style={{display: \"block\", fontSize: \"0.875rem\", fontWeight: \"500\", marginBottom: \"4px\"}}>Total Epochs: {totalEpochs}</label>\n          <input \n            type=\"range\" \n            min=\"1\" max=\"20\" step=\"1\" \n            value={totalEpochs} \n            onChange={(e) => setTotalEpochs(parseInt(e.target.value))} \n            style={{width: \"100%\"}}\n          />\n        </div>\n        \n        <div>\n          <label style={{display: \"block\", fontSize: \"0.875rem\", fontWeight: \"500\", marginBottom: \"4px\"}}>Max Learning Rate: {maxLR.toExponential(4)}</label>\n          <input \n            type=\"range\" \n            min=\"0.0001\" max=\"0.01\" step=\"0.0001\" \n            value={maxLR} \n            onChange={(e) => setMaxLR(parseFloat(e.target.value))} \n            style={{width: \"100%\"}}\n          />\n        </div>\n        \n        <div>\n          <label style={{display: \"block\", fontSize: \"0.875rem\", fontWeight: \"500\", marginBottom: \"4px\"}}>Warm-up Percentage: {(warmupPct * 100).toFixed(0)}%</label>\n          <input \n            type=\"range\" \n            min=\"0\" max=\"0.5\" step=\"0.01\" \n            value={warmupPct} \n            onChange={(e) => setWarmupPct(parseFloat(e.target.value))} \n            style={{width: \"100%\"}}\n          />\n        </div>\n        \n        <div>\n          <label style={{display: \"block\", fontSize: \"0.875rem\", fontWeight: \"500\", marginBottom: \"4px\"}}>Initial Learning Rate: {initialLR.toExponential(4)}</label>\n          <input \n            type=\"range\" \n            min=\"0.00001\" max=\"0.001\" step=\"0.00001\" \n            value={initialLR} \n            onChange={(e) => setInitialLR(parseFloat(e.target.value))} \n            style={{width: \"100%\"}}\n          />\n        </div>\n      </div>\n      \n      <div style={{marginBottom: \"16px\", display: \"flex\", flexWrap: \"wrap\", gap: \"8px\", justifyContent: \"center\"}}>\n        {Object.entries(SCHEDULE_COLORS).map(([schedule, color]) => (\n          <button \n            key={schedule}\n            onClick={() => toggleSchedule(schedule)}\n            style={{ \n              padding: \"4px 12px\", \n              borderRadius: \"4px\", \n              fontSize: \"0.75rem\",\n              border: \"1px solid\",\n              borderColor: activeSchedules.includes(schedule) ? color : \"#e5e7eb\",\n              backgroundColor: activeSchedules.includes(schedule) ? `${color}20` : \"transparent\",\n              color: activeSchedules.includes(schedule) ? \"inherit\" : \"#9ca3af\",\n              fontWeight: activeSchedules.includes(schedule) ? \"500\" : \"normal\",\n              cursor: \"pointer\"\n            }}\n          >\n            <span style={{display: \"inline-block\", width: \"12px\", height: \"12px\", marginRight: \"4px\", borderRadius: \"50%\", backgroundColor: color}}></span>\n            {schedule.charAt(0).toUpperCase() + schedule.slice(1)}\n          </button>\n        ))}\n      </div>\n      \n      <div style={{width: \"100%\", backgroundColor: \"white\", padding: \"12px\", borderRadius: \"8px\", border: \"1px solid #e5e7eb\", marginBottom: \"16px\"}}>\n        <h2 style={{fontSize: \"1.125rem\", fontWeight: \"500\", marginBottom: \"8px\"}}>Learning Rate Schedules</h2>\n        \n        <div id=\"chart-container\" style={{ width: '100%', height: `${chartHeight}px`, position: 'relative', margin: \"0 auto\" }}>\n          {lrData.length > 0 ? (\n            <LineChart\n              width={chartWidth}\n              height={chartHeight}\n              data={lrData}\n              margin={{ top: 20, right: 30, left: 30, bottom: 30 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis \n                dataKey=\"step\"\n                type=\"number\"\n                domain={[0, totalSteps]}\n                label={{ value: 'Training Steps', position: 'bottom', offset: 15 }}\n              />\n              <YAxis \n                tickFormatter={(value) => value.toExponential(1)}\n                label={{ value: 'Learning Rate', angle: -90, position: 'insideLeft', offset: -15 }}\n              />\n              <Tooltip content={<SimpleTooltip />} />\n              <Legend verticalAlign=\"top\" height={36} />\n              \n              <ReferenceLine \n                x={Math.floor(totalSteps * warmupPct)} \n                stroke=\"#64748b\"\n                strokeDasharray=\"3 3\"\n                label={{\n                  value: 'Warmup End',\n                  position: 'insideBottomRight',\n                  fontSize: 10\n                }}\n              />\n              \n              {activeSchedules.includes('constant') && (\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"constant\"\n                  name=\"Constant\"\n                  stroke={SCHEDULE_COLORS.constant}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              )}\n              \n              {activeSchedules.includes('step') && (\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"step_decay\"\n                  name=\"Step Decay\"\n                  stroke={SCHEDULE_COLORS.step}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              )}\n              \n              {activeSchedules.includes('onecycle') && (\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"onecycle\"\n                  name=\"OneCycle\"\n                  stroke={SCHEDULE_COLORS.onecycle}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              )}\n              \n              {activeSchedules.includes('cosine') && (\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"cosine\"\n                  name=\"Cosine\"\n                  stroke={SCHEDULE_COLORS.cosine}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              )}\n            </LineChart>\n          ) : (\n            <div style={{display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\"}}>\n              <p style={{color: \"#6b7280\"}}>Loading chart data...</p>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <div style={{width: \"100%\", backgroundColor: \"white\", padding: \"12px\", borderRadius: \"8px\", border: \"1px solid #e5e7eb\", marginBottom: \"16px\"}}>\n        <h2 style={{fontSize: \"1.125rem\", fontWeight: \"500\", marginBottom: \"8px\"}}>Loss Trajectories</h2>\n        <p style={{fontSize: \"0.875rem\", color: \"#4b5563\", marginBottom: \"12px\"}}>\n          See how different learning rate schedules affect model convergence:\n        </p>\n        \n        <div id=\"loss-chart-container\" style={{ width: '100%', height: `${chartHeight}px`, position: 'relative', margin: \"0 auto\" }}>\n          {lossData.length > 0 ? (\n            <LineChart\n              width={chartWidth}\n              height={chartHeight}\n              data={lossData}\n              margin={{ top: 20, right: 30, left: 30, bottom: 30 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis \n                dataKey=\"step\"\n                type=\"number\"\n                domain={[0, totalSteps]}\n                label={{ value: 'Training Steps', position: 'bottom', offset: 15 }}\n              />\n              <YAxis \n                label={{ value: 'Loss', angle: -90, position: 'insideLeft', offset: -15 }}\n              />\n              <Tooltip content={<SimpleTooltip />} />\n              <Legend verticalAlign=\"top\" height={36} />\n              \n              <ReferenceLine \n                x={Math.floor(totalSteps * warmupPct)} \n                stroke=\"#64748b\"\n                strokeDasharray=\"3 3\"\n                label={{\n                  value: 'Warmup End',\n                  position: 'insideBottomRight',\n                  fontSize: 10\n                }}\n              />\n              \n              {activeSchedules.includes('step') && (\n                <>\n                  <ReferenceLine \n                    x={Math.floor(totalSteps * warmupPct) + Math.floor((totalSteps - Math.floor(totalSteps * warmupPct)) / 3)} \n                    stroke={SCHEDULE_COLORS.step}\n                    strokeDasharray=\"3 3\"\n                    label={{\n                      value: 'LR Drop 1',\n                      position: 'insideTopRight',\n                      fontSize: 9,\n                      fill: SCHEDULE_COLORS.step\n                    }}\n                  />\n                  <ReferenceLine \n                    x={Math.floor(totalSteps * warmupPct) + Math.floor((totalSteps - Math.floor(totalSteps * warmupPct)) * 2 / 3)} \n                    stroke={SCHEDULE_COLORS.step}\n                    strokeDasharray=\"3 3\"\n                    label={{\n                      value: 'LR Drop 2',\n                      position: 'insideTopRight',\n                      fontSize: 9,\n                      fill: SCHEDULE_COLORS.step\n                    }}\n                  />\n                </>\n              )}\n              \n              <ReferenceLine \n                x={Math.floor(totalSteps * 0.6)} \n                stroke=\"#64748b\"\n                strokeDasharray=\"2 4\"\n                label={{\n                  value: 'Fine-tuning Phase',\n                  position: 'insideTopLeft',\n                  fontSize: 10\n                }}\n              />\n              \n              {/* Loss curves */}\n              {activeSchedules.includes('constant') && (\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"constant_loss\"\n                  name=\"Constant Loss\"\n                  stroke={SCHEDULE_COLORS.constant}\n                  strokeWidth={2}\n                  dot={false}\n                  connectNulls={true}\n                />\n              )}\n              \n              {activeSchedules.includes('step') && (\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"step_loss\"\n                  name=\"Step Loss\"\n                  stroke={SCHEDULE_COLORS.step}\n                  strokeWidth={2}\n                  dot={false}\n                  connectNulls={true}\n                />\n              )}\n              \n              {activeSchedules.includes('onecycle') && (\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"onecycle_loss\"\n                  name=\"OneCycle Loss\"\n                  stroke={SCHEDULE_COLORS.onecycle}\n                  strokeWidth={2}\n                  dot={false}\n                  connectNulls={true}\n                />\n              )}\n              \n              {activeSchedules.includes('cosine') && (\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"cosine_loss\"\n                  name=\"Cosine Loss\"\n                  stroke={SCHEDULE_COLORS.cosine}\n                  strokeWidth={2}\n                  dot={false}\n                  connectNulls={true}\n                />\n              )}\n              \n              {/* Reference lines for descriptions */}\n              {activeSchedules.includes('constant') && (\n                <ReferenceLine \n                  y={optimalLoss * 1.5}\n                  stroke={SCHEDULE_COLORS.constant}\n                  strokeDasharray=\"2 4\"\n                  label={{\n                    value: 'Constant: Oscillations',\n                    position: 'insideBottomRight',\n                    fontSize: 9,\n                    fill: SCHEDULE_COLORS.constant\n                  }}\n                />\n              )}\n              \n              {activeSchedules.includes('step') && (\n                <ReferenceLine \n                  y={optimalLoss * 1.1}\n                  stroke={SCHEDULE_COLORS.step}\n                  strokeDasharray=\"2 4\" \n                  label={{\n                    value: 'Step: Plateaus & jumps',\n                    position: 'right',\n                    fontSize: 9,\n                    fill: SCHEDULE_COLORS.step\n                  }}\n                />\n              )}\n              \n              {activeSchedules.includes('onecycle') && (\n                <ReferenceLine \n                  y={optimalLoss * 1.05}\n                  stroke={SCHEDULE_COLORS.onecycle}\n                  strokeDasharray=\"2 4\"\n                  label={{\n                    value: 'OneCycle: Balanced',\n                    position: 'right',\n                    fontSize: 9,\n                    fill: SCHEDULE_COLORS.onecycle\n                  }}\n                />\n              )}\n              \n              {activeSchedules.includes('cosine') && (\n                <ReferenceLine \n                  y={optimalLoss * 0.9}\n                  stroke={SCHEDULE_COLORS.cosine}\n                  strokeDasharray=\"2 4\"\n                  label={{\n                    value: 'Cosine: Best final loss',\n                    position: 'left',\n                    fontSize: 9,\n                    fill: SCHEDULE_COLORS.cosine\n                  }}\n                />\n              )}\n            </LineChart>\n          ) : (\n            <div style={{display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\"}}>\n              <p style={{color: \"#6b7280\"}}>Loading chart data...</p>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <div style={{width: \"100%\", backgroundColor: \"white\", padding: \"12px\", borderRadius: \"8px\", border: \"1px solid #e5e7eb\"}}>\n        <h2 style={{fontSize: \"1.125rem\", fontWeight: \"500\", marginBottom: \"8px\"}}>How Learning Rate Affects Training</h2>\n        \n        <div style={{display: \"flex\", flexDirection: \"column\", gap: \"12px\", fontSize: \"0.875rem\"}}>\n          <div style={{padding: \"12px\", backgroundColor: \"#F3F4F6\", borderRadius: \"4px\", marginBottom: \"8px\"}}>\n            <h3 style={{fontWeight: \"600\", marginBottom: \"8px\"}}>LR Schedule Comparison:</h3>\n            <div style={{display: \"grid\", gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\", gap: \"8px\"}}>\n              <div style={{padding: \"8px\", borderRadius: \"4px\", backgroundColor: `${SCHEDULE_COLORS.constant}15`, border: `1px solid ${SCHEDULE_COLORS.constant}30`}}>\n                <h4 style={{fontWeight: \"500\", marginBottom: \"4px\", color: SCHEDULE_COLORS.constant}}>Constant LR</h4>\n                <p style={{fontSize: \"0.75rem\", marginBottom: \"4px\"}}>👍 Fast initial training</p>\n                <p style={{fontSize: \"0.75rem\", marginBottom: \"4px\"}}>👍 Simple implementation</p>\n                <p style={{fontSize: \"0.75rem\", marginBottom: \"4px\"}}>👎 Oscillations near minimum</p>\n                <p style={{fontSize: \"0.75rem\", marginBottom: \"4px\"}}>👎 Never reaches optimal loss</p>\n              </div>\n              \n              <div style={{padding: \"8px\", borderRadius: \"4px\", backgroundColor: `${SCHEDULE_COLORS.step}15`, border: `1px solid ${SCHEDULE_COLORS.step}30`}}>\n                <h4 style={{fontWeight: \"500\", marginBottom: \"4px\", color: SCHEDULE_COLORS.step}}>Step Decay</h4>\n                <p style={{fontSize: \"0.75rem\", marginBottom: \"4px\"}}>👍 Predictable improvement stages</p>\n                <p style={{fontSize: \"0.75rem\", marginBottom: \"4px\"}}>👍 Good plateau escape</p>\n                <p style={{fontSize: \"0.75rem\", marginBottom: \"4px\"}}>👎 Stagnation between drops</p>\n                <p style={{fontSize: \"0.75rem\", marginBottom: \"4px\"}}>👎 Requires manual scheduling</p>\n              </div>\n              \n              <div style={{padding: \"8px\", borderRadius: \"4px\", backgroundColor: `${SCHEDULE_COLORS.onecycle}15`, border: `1px solid ${SCHEDULE_COLORS.onecycle}30`}}>\n                <h4 style={{fontWeight: \"500\", marginBottom: \"4px\", color: SCHEDULE_COLORS.onecycle}}>OneCycle</h4>\n                <p style={{fontSize: \"0.75rem\", marginBottom: \"4px\"}}>👍 Balanced exploration & refinement</p>\n                <p style={{fontSize: \"0.75rem\", marginBottom: \"4px\"}}>👍 Good generalization</p>\n                <p style={{fontSize: \"0.75rem\", marginBottom: \"4px\"}}>👍 Reliable performance</p>\n                <p style={{fontSize: \"0.75rem\", marginBottom: \"4px\"}}>👎 Slightly slower final convergence</p>\n              </div>\n              \n              <div style={{padding: \"8px\", borderRadius: \"4px\", backgroundColor: `${SCHEDULE_COLORS.cosine}15`, border: `1px solid ${SCHEDULE_COLORS.cosine}30`}}>\n                <h4 style={{fontWeight: \"500\", marginBottom: \"4px\", color: SCHEDULE_COLORS.cosine}}>Cosine Annealing</h4>\n                <p style={{fontSize: \"0.75rem\", marginBottom: \"4px\"}}>👍 Smoothest decay profile</p>\n                <p style={{fontSize: \"0.75rem\", marginBottom: \"4px\"}}>👍 Best final loss value</p>\n                <p style={{fontSize: \"0.75rem\", marginBottom: \"4px\"}}>👍 Precision fine-tuning</p>\n                <p style={{fontSize: \"0.75rem\", marginBottom: \"4px\"}}>👎 Slower mid-training progress</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LRScheduleVisualizer;\n","import React, { useState } from 'react';\nimport NeuralNetworkVisualization from './components/NeuralNetworkFunctionApproximator';\nimport VAEVisualizer from './components/VAEVisualizer';\nimport GradientDescent from './components/GradientDescentAtSaddlePoint';\nimport EpochAndBatch from './components/EpochAndBatchVisualization';\nimport EncoderDecoder from './components/EncoderDecoderVisualizer';\nimport HessianEigenvalue from './components/HessianAndEigenvalue';\nimport LearningRate from './components/LearningRate';\n\nfunction App() {\n  const [activeComponent, setActiveComponent] = useState('neural');\n  \n  // Button data array\n  const buttons = [\n    { id: 'neural', label: 'Function Approximation' },\n    { id: 'vae', label: 'Variational Autoencoder' },\n    { id: 'gd', label: 'Saddle Points' },\n    { id: 'eb', label: 'Epochs & Batches' },\n    { id: 'ed', label: 'Encoder-Decoder Models' },\n    { id: 'hessian', label: 'Hessian & Eigenvalues' },\n    { id: 'learningrate', label: 'Learning Rates' }\n  ];\n  \n  // Button style generator function\n  const getButtonStyle = (id) => ({\n    padding: '8px 16px',\n    border: 'none',\n    borderRadius: '4px',\n    backgroundColor: activeComponent === id ? '#007bff' : '#f0f0f0',\n    color: activeComponent === id ? 'white' : 'black',\n    cursor: 'pointer',\n    fontWeight: activeComponent === id ? 'bold' : 'normal',\n    transition: 'background-color 0.2s'\n  });\n  \n  // Component mapping object\n  const componentMap = {\n    neural: <NeuralNetworkVisualization />,\n    vae: <VAEVisualizer />,\n    gd: <GradientDescent />,\n    eb: <EpochAndBatch />,\n    ed: <EncoderDecoder />,\n    hessian: <HessianEigenvalue />,\n    learningrate: <LearningRate />\n  };\n  \n  return (\n    <div className=\"App\">\n      <header style={{ \n        padding: '12px 20px', \n        display: 'flex', \n        justifyContent: 'space-between', \n        alignItems: 'center', \n        borderBottom: '1px solid #e0e0e0' \n      }}>\n        <div style={{ fontSize: '16px', fontWeight: 'bold' }}>Machine Learning Algorithm Visualizer</div>\n        <div className=\"tabs\" style={{ \n          display: 'flex', \n          flexWrap: 'wrap',  \n          gap: '10px',       \n          justifyContent: 'flex-start'\n        }}>\n          {buttons.map(button => (\n            <button \n              key={button.id}\n              onClick={() => setActiveComponent(button.id)}\n              style={getButtonStyle(button.id)}\n            >\n              {button.label}\n            </button>\n          ))}\n        </div>\n      </header>\n      \n      <div style={{ padding: '20px' }}>\n        {componentMap[activeComponent]}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}